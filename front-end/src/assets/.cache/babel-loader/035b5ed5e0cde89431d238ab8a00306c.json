{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\components\\\\Pagination\\\\PaginationProductList.js\";\nimport React, { useState, useEffect } from 'react';\nimport Posts from './Posts';\nimport PaginationPage from './PaginationPage';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport productStore from 'store/modules/productStore';\nimport { changeProductList, changeCurrentProduct } from 'store/modules/productStore';\nimport ApiService from \"ApiService\";\n\nconst PaginationProductList = props => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(12);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      ApiService.fetchProductList().then(res => {\n        this.setState({\n          productList: res.data\n        });\n        const {\n          changeProductList\n        } = this.props;\n        changeProductList(this.state.productList);\n        console.log(\"페이지네이션 에서 바꾸기 \", this.props.list);\n      }); //const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n      //const res = props.list;\n      //console.log(\"productListasdf\", res.data);\n\n      console.log(\"list\", this.productList);\n      setPosts(props.list);\n      console.log(\"posts\", posts);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); // Get current posts\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-primary mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"My Blog\"), /*#__PURE__*/React.createElement(Posts, {\n    posts: currentPosts,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PaginationPage, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  //2\n  category: productStore.category,\n  list: productStore.productList,\n  CurrentProduct: productStore.CurrentProduct\n}); //import store name이 맞는거다\n//props로 넣어줄 액션 생성함수\n\n\nconst mapDispatchToProps = dispatch => ({\n  changeProductList: list => dispatch(changeProductList(list)),\n  changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct))\n});\n\nexport default connect( // 스토어와 연결\nmapStateToProps, mapDispatchToProps)(PaginationProductList);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/components/Pagination/PaginationProductList.js"],"names":["React","useState","useEffect","Posts","PaginationPage","axios","connect","productStore","changeProductList","changeCurrentProduct","ApiService","PaginationProductList","props","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","fetchPosts","fetchProductList","then","res","setState","productList","data","state","console","log","list","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length","mapStateToProps","category","CurrentProduct","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Posts from './Posts';\r\n\r\nimport PaginationPage from './PaginationPage';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport productStore from 'store/modules/productStore';\r\nimport { changeProductList, changeCurrentProduct } from 'store/modules/productStore';\r\nimport ApiService from \"ApiService\";\r\n\r\nconst PaginationProductList = (props) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(12);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      ApiService.fetchProductList()\r\n        .then((res) => {\r\n          this.setState({\r\n            productList: res.data,\r\n          });\r\n          const { changeProductList } = this.props;\r\n          changeProductList(this.state.productList);\r\n          console.log(\"페이지네이션 에서 바꾸기 \", this.props.list);\r\n        })\r\n      //const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\r\n      //const res = props.list;\r\n      //console.log(\"productListasdf\", res.data);\r\n      console.log(\"list\", this.productList);\r\n      setPosts(props.list);\r\n      console.log(\"posts\", posts);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className='container mt-5'>\r\n      <h1 className='text-primary mb-3'>My Blog</h1>\r\n      <Posts posts={currentPosts} loading={loading} />\r\n      <PaginationPage\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={posts.length}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ productStore }) => ({  //2\r\n  category: productStore.category,\r\n  list: productStore.productList,\r\n  CurrentProduct: productStore.CurrentProduct,\r\n});\r\n//import store name이 맞는거다\r\n\r\n//props로 넣어줄 액션 생성함수\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeProductList: list => dispatch(changeProductList(list)),\r\n  changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\r\n});\r\nexport default connect( // 스토어와 연결\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(PaginationProductList);"]},"metadata":{},"sourceType":"module"}