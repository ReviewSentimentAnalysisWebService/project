{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\container\\\\ProductListContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProductList from \"components/redux/ProductList\";\nimport { changeProductList, changeCurrentProduct } from '../store/modules/productStore';\nimport productStore from 'store/modules/productStore';\n\nclass ProductListContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = name => {\n      changeCurrentProduct(name);\n    };\n  }\n\n  render() {\n    //\n    const [posts, setPosts] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postsPerPage] = useState(10);\n    useEffect(() => {\n      const fetchPosts = async () => {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n        setPosts(res.data);\n      };\n\n      fetchPosts();\n    }, []); // Get current posts\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost); // Change page\n\n    const paginate = pageNumber => setCurrentPage(pageNumber); // \n\n\n    const {\n      category,\n      list\n    } = this.props;\n    const query = \"ProductList_\" + category;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n      category: category,\n      list: list,\n      click: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  //2\n  category: productStore.category,\n  list: productStore.productList,\n  CurrentProduct: productStore.CurrentProduct\n}); //import store name이 맞는거다\n//props로 넣어줄 액션 생성함수\n\n\nconst mapDispatchToProps = dispatch => ({\n  changeProductList: list => dispatch(changeProductList(list)),\n  changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct))\n});\n\nexport default connect( // 스토어와 연결\nmapStateToProps, mapDispatchToProps)(ProductListContainer);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/container/ProductListContainer.js"],"names":["React","Component","connect","ProductList","changeProductList","changeCurrentProduct","productStore","ProductListContainer","handleClick","name","render","posts","setPosts","useState","currentPage","setCurrentPage","postsPerPage","useEffect","fetchPosts","res","axios","get","data","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","category","list","props","query","mapStateToProps","productList","CurrentProduct","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,+BAAxD;AAGA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,oBAAN,SAAmCN,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAGzCO,WAHyC,GAG3BC,IAAI,IAAI;AAClBJ,MAAAA,oBAAoB,CAACI,IAAD,CAApB;AACH,KALwC;AAAA;;AAMzCC,EAAAA,MAAM,GAAG;AACL;AACA,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AACA,UAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCF,QAAQ,CAAC,CAAD,CAA9C;AACA,UAAM,CAACG,YAAD,IAAiBH,QAAQ,CAAC,EAAD,CAA/B;AAEAI,IAAAA,SAAS,CAAC,MAAM;AACZ,YAAMC,UAAU,GAAG,YAAY;AAC3B,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,4CAAV,CAAlB;AACAT,QAAAA,QAAQ,CAACO,GAAG,CAACG,IAAL,CAAR;AACH,OAHD;;AAKAJ,MAAAA,UAAU;AACb,KAPQ,EAON,EAPM,CAAT,CANK,CAeL;;AACA,UAAMK,eAAe,GAAGT,WAAW,GAAGE,YAAtC;AACA,UAAMQ,gBAAgB,GAAGD,eAAe,GAAGP,YAA3C;AACA,UAAMS,YAAY,GAAGd,KAAK,CAACe,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB,CAlBK,CAoBL;;AACA,UAAMI,QAAQ,GAAGC,UAAU,IAAIb,cAAc,CAACa,UAAD,CAA7C,CArBK,CAsBL;;;AACA,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAqB,KAAKC,KAAhC;AACA,UAAMC,KAAK,GAAI,iBAAiBH,QAAhC;AAGA,wBACI,uDAEI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAEA,QAAvB;AAAiC,MAAA,IAAI,EAAEC,IAAvC;AAA6C,MAAA,KAAK,EAAE,KAAKtB,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAQH;;AAzCwC;;AA2C7C,MAAMyB,eAAe,GAAG,CAAC;AAAE3B,EAAAA;AAAF,CAAD,MAAuB;AAAG;AAC9CuB,EAAAA,QAAQ,EAAEvB,YAAY,CAACuB,QADoB;AAE3CC,EAAAA,IAAI,EAAExB,YAAY,CAAC4B,WAFwB;AAG3CC,EAAAA,cAAc,EAAE7B,YAAY,CAAC6B;AAHc,CAAvB,CAAxB,C,CAKA;AAEA;;;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjC,EAAAA,iBAAiB,EAAE0B,IAAI,IAAIO,QAAQ,CAACjC,iBAAiB,CAAC0B,IAAD,CAAlB,CADC;AAEpCzB,EAAAA,oBAAoB,EAAE8B,cAAc,IAAIE,QAAQ,CAAChC,oBAAoB,CAAC8B,cAAD,CAArB;AAFZ,CAAL,CAAnC;;AAKA,eAAejC,OAAO,EAAE;AACpB+B,eADkB,EAElBG,kBAFkB,CAAP,CAGb7B,oBAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProductList from \"components/redux/ProductList\";\r\nimport { changeProductList, changeCurrentProduct } from '../store/modules/productStore';\r\n\r\n\r\nimport productStore from 'store/modules/productStore';\r\n\r\nclass ProductListContainer extends Component { //3\r\n\r\n\r\n    handleClick = name => {\r\n        changeCurrentProduct(name);\r\n    }\r\n    render() {\r\n        //\r\n        const [posts, setPosts] = useState([]);\r\n        const [currentPage, setCurrentPage] = useState(1);\r\n        const [postsPerPage] = useState(10);\r\n\r\n        useEffect(() => {\r\n            const fetchPosts = async () => {\r\n                const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\r\n                setPosts(res.data);\r\n            };\r\n\r\n            fetchPosts();\r\n        }, []);\r\n\r\n        // Get current posts\r\n        const indexOfLastPost = currentPage * postsPerPage;\r\n        const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n        const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n        // Change page\r\n        const paginate = pageNumber => setCurrentPage(pageNumber);\r\n        // \r\n        const { category, list } = this.props;\r\n        const query = (\"ProductList_\" + category);\r\n\r\n\r\n        return (\r\n            < >\r\n\r\n                <ProductList category={category} list={list} click={this.handleClick} />\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = ({ productStore }) => ({  //2\r\n    category: productStore.category,\r\n    list: productStore.productList,\r\n    CurrentProduct: productStore.CurrentProduct,\r\n});\r\n//import store name이 맞는거다\r\n\r\n//props로 넣어줄 액션 생성함수\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeProductList: list => dispatch(changeProductList(list)),\r\n    changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\r\n});\r\n\r\nexport default connect( // 스토어와 연결\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(ProductListContainer);"]},"metadata":{},"sourceType":"module"}