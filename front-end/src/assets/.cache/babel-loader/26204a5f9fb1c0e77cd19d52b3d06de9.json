{"ast":null,"code":"'use strict';\n\nconst TYPES = {\n  array: 'Array',\n  object: 'Object',\n  string: 'String',\n  date: 'Date',\n  regExp: 'RegExp',\n  function: 'Function',\n  boolean: 'Boolean',\n  number: 'Number',\n  null: 'Null',\n  undefined: 'Undefined'\n},\n      getType = a => Object.prototype.toString.call(a).slice(8, -1),\n      isArray = a => getType(a) === TYPES.array,\n      isObject = a => getType(a) === TYPES.object,\n      isString = a => getType(a) === TYPES.string,\n      isDate = a => getType(a) === TYPES.date,\n      isRegExp = a => getType(a) === TYPES.regExp,\n      isFunction = a => getType(a) === TYPES.function,\n      isBoolean = a => getType(a) === TYPES.boolean || isString(a) && ('true' === a || 'false' === a),\n      isNumber = a => getType(a) === TYPES.number && !Number.isNaN(a),\n      isNull = a => getType(a) === TYPES.null || getType(a) === TYPES.undefined,\n      isEmpty = a => isString(a) ? '' === a.trim() : isArray(a) ? 0 === a.length : isObject(a) ? 0 === Object.keys(a).length : isNull(a),\n      isEmptyOrZero = a => isEmpty(a) || isNumber(a) && 0 === a;\n\nmodule.exports = {\n  isArray,\n  isObject,\n  isString,\n  isDate,\n  isRegExp,\n  isFunction,\n  isBoolean,\n  isNumber,\n  isNull,\n  isEmpty,\n  isEmptyOrZero\n};","map":{"version":3,"sources":["C:/dev_React/project/front-end/node_modules/typeco/dist/index.js"],"names":["TYPES","array","object","string","date","regExp","function","boolean","number","null","undefined","getType","a","Object","prototype","toString","call","slice","isArray","isObject","isString","isDate","isRegExp","isFunction","isBoolean","isNumber","Number","isNaN","isNull","isEmpty","trim","length","keys","isEmptyOrZero","module","exports"],"mappings":"AAAA;;AAAa,MAAMA,KAAK,GAAC;AAACC,EAAAA,KAAK,EAAC,OAAP;AAAeC,EAAAA,MAAM,EAAC,QAAtB;AAA+BC,EAAAA,MAAM,EAAC,QAAtC;AAA+CC,EAAAA,IAAI,EAAC,MAApD;AAA2DC,EAAAA,MAAM,EAAC,QAAlE;AAA2EC,EAAAA,QAAQ,EAAC,UAApF;AAA+FC,EAAAA,OAAO,EAAC,SAAvG;AAAiHC,EAAAA,MAAM,EAAC,QAAxH;AAAiIC,EAAAA,IAAI,EAAC,MAAtI;AAA6IC,EAAAA,SAAS,EAAC;AAAvJ,CAAZ;AAAA,MAAgLC,OAAO,GAACC,CAAC,IAAEC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,EAAkCK,KAAlC,CAAwC,CAAxC,EAA0C,CAAC,CAA3C,CAA3L;AAAA,MAAyOC,OAAO,GAACN,CAAC,IAAED,OAAO,CAACC,CAAD,CAAP,KAAaZ,KAAK,CAACC,KAAvQ;AAAA,MAA6QkB,QAAQ,GAACP,CAAC,IAAED,OAAO,CAACC,CAAD,CAAP,KAAaZ,KAAK,CAACE,MAA5S;AAAA,MAAmTkB,QAAQ,GAACR,CAAC,IAAED,OAAO,CAACC,CAAD,CAAP,KAAaZ,KAAK,CAACG,MAAlV;AAAA,MAAyVkB,MAAM,GAACT,CAAC,IAAED,OAAO,CAACC,CAAD,CAAP,KAAaZ,KAAK,CAACI,IAAtX;AAAA,MAA2XkB,QAAQ,GAACV,CAAC,IAAED,OAAO,CAACC,CAAD,CAAP,KAAaZ,KAAK,CAACK,MAA1Z;AAAA,MAAiakB,UAAU,GAACX,CAAC,IAAED,OAAO,CAACC,CAAD,CAAP,KAAaZ,KAAK,CAACM,QAAlc;AAAA,MAA2ckB,SAAS,GAACZ,CAAC,IAAED,OAAO,CAACC,CAAD,CAAP,KAAaZ,KAAK,CAACO,OAAnB,IAA4Ba,QAAQ,CAACR,CAAD,CAAR,KAAc,WAASA,CAAT,IAAY,YAAUA,CAApC,CAApf;AAAA,MAA2hBa,QAAQ,GAACb,CAAC,IAAED,OAAO,CAACC,CAAD,CAAP,KAAaZ,KAAK,CAACQ,MAAnB,IAA2B,CAACkB,MAAM,CAACC,KAAP,CAAaf,CAAb,CAAnkB;AAAA,MAAmlBgB,MAAM,GAAChB,CAAC,IAAED,OAAO,CAACC,CAAD,CAAP,KAAaZ,KAAK,CAACS,IAAnB,IAAyBE,OAAO,CAACC,CAAD,CAAP,KAAaZ,KAAK,CAACU,SAAzoB;AAAA,MAAmpBmB,OAAO,GAACjB,CAAC,IAAEQ,QAAQ,CAACR,CAAD,CAAR,GAAY,OAAKA,CAAC,CAACkB,IAAF,EAAjB,GAA0BZ,OAAO,CAACN,CAAD,CAAP,GAAW,MAAIA,CAAC,CAACmB,MAAjB,GAAwBZ,QAAQ,CAACP,CAAD,CAAR,GAAY,MAAIC,MAAM,CAACmB,IAAP,CAAYpB,CAAZ,EAAemB,MAA/B,GAAsCH,MAAM,CAAChB,CAAD,CAA5vB;AAAA,MAAgwBqB,aAAa,GAACrB,CAAC,IAAEiB,OAAO,CAACjB,CAAD,CAAP,IAAYa,QAAQ,CAACb,CAAD,CAAR,IAAa,MAAIA,CAA9yB;;AAAgzBsB,MAAM,CAACC,OAAP,GAAe;AAACjB,EAAAA,OAAD;AAASC,EAAAA,QAAT;AAAkBC,EAAAA,QAAlB;AAA2BC,EAAAA,MAA3B;AAAkCC,EAAAA,QAAlC;AAA2CC,EAAAA,UAA3C;AAAsDC,EAAAA,SAAtD;AAAgEC,EAAAA,QAAhE;AAAyEG,EAAAA,MAAzE;AAAgFC,EAAAA,OAAhF;AAAwFI,EAAAA;AAAxF,CAAf","sourcesContent":["'use strict';const TYPES={array:'Array',object:'Object',string:'String',date:'Date',regExp:'RegExp',function:'Function',boolean:'Boolean',number:'Number',null:'Null',undefined:'Undefined'},getType=a=>Object.prototype.toString.call(a).slice(8,-1),isArray=a=>getType(a)===TYPES.array,isObject=a=>getType(a)===TYPES.object,isString=a=>getType(a)===TYPES.string,isDate=a=>getType(a)===TYPES.date,isRegExp=a=>getType(a)===TYPES.regExp,isFunction=a=>getType(a)===TYPES.function,isBoolean=a=>getType(a)===TYPES.boolean||isString(a)&&('true'===a||'false'===a),isNumber=a=>getType(a)===TYPES.number&&!Number.isNaN(a),isNull=a=>getType(a)===TYPES.null||getType(a)===TYPES.undefined,isEmpty=a=>isString(a)?''===a.trim():isArray(a)?0===a.length:isObject(a)?0===Object.keys(a).length:isNull(a),isEmptyOrZero=a=>isEmpty(a)||isNumber(a)&&0===a;module.exports={isArray,isObject,isString,isDate,isRegExp,isFunction,isBoolean,isNumber,isNull,isEmpty,isEmptyOrZero};"]},"metadata":{},"sourceType":"script"}