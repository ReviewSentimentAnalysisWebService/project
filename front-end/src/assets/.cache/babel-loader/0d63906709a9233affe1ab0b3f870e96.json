{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\components\\\\Card\\\\ProductCard.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from 'react-router-dom'; //import productStore from 'store/modules/productStore';\n\nimport { connect } from 'react-redux';\nimport { Grid } from \"@material-ui/core\";\nimport { changeCurrentKeyword, changeCurrentProduct, changeCurrentnv_mid, Change_ReviewNumber } from 'store/modules/productStore'; //import productStore from 'store/modules/productStore';\n//import { handleClick } from 'container/ProductListContainer';\n//front-end\\src\\container\\ProductListContainer.js\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  margin: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst ProductCard = props => {\n  const classes = useStyles(); //const { id, avatarSrc, title, subtitle, description, imgSrc, price, nv_mid } = props;\n\n  const {\n    cat_id,\n    name,\n    date,\n    img_url,\n    price,\n    nv_mid\n  } = props;\n  const productURL = \"https://search.shopping.naver.com/detail/detail.nhn?nvMid=\" + props.nv_mid; //세트인듯\n\n  const {\n    changeCurrentProduct,\n    changeCurrentKeyword,\n    changeCurrentnv_mid\n  } = props;\n\n  const clickDetail = () => {\n    changeCurrentProduct(name);\n    changeCurrentKeyword(\"무게감\");\n    changeCurrentnv_mid(props.nv_mid); //여기서 리뷰를 바꾼다.\n    //filter 후 length 한 값들이 data \n    //title로 이름이 바뀌면\n    //그에 맞는 키워드로 바뀌고\n    //그에 맞는 리뷰들로 바꿔어야 한다.\n    //console.log(\">>>>>>props.changeCurrentKeyword \" + props.CurrentKeyword);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    style: {\n      backgroundColor: \"#E0E0E0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    style: {\n      height: \"50px\"\n    },\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: img_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }),\n    title: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardMedia, {\n    style: {\n      height: \"300px\",\n      space: \"nowrap\"\n    },\n    image: img_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"\\uB4F1\\uB85D\\uB0A0\\uC9DC : \", date, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 24\n    }\n  }), price, \"\\uC6D0\")), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"medium\",\n    color: \"primary\",\n    fullWidth: \"bool\",\n    className: classes.margin,\n    onClick: clickDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Detail\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"medium\",\n    color: \"primary\",\n    fullWidth: \"bool\",\n    className: classes.margin,\n    href: productURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"BUY NOW\")))));\n};\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  //2\n  category: productStore.category,\n  list: productStore.productList,\n  CurrentProduct: productStore.CurrentProduct,\n  CurrentKeyword: productStore.CurrentKeyword,\n  Currentnv_mid: productStore.Currentnv_mid\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\n    changeCurrentKeyword: CurrentKeyword => dispatch(changeCurrentKeyword(CurrentKeyword)),\n    changeCurrentnv_mid: Currentnv_mid => dispatch(changeCurrentnv_mid(Currentnv_mid)),\n    Change_ReviewNumber: ReviewNumber => dispatch(Change_ReviewNumber(ReviewNumber))\n  };\n};\n\nexport default connect( // 스토어와 연결\nmapStateToProps, mapDispatchToProps)(ProductCard);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/components/Card/ProductCard.js"],"names":["React","makeStyles","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","Typography","red","Button","Link","connect","Grid","changeCurrentKeyword","changeCurrentProduct","changeCurrentnv_mid","Change_ReviewNumber","useStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","margin","spacing","ProductCard","props","classes","cat_id","name","date","img_url","price","nv_mid","productURL","clickDetail","space","mapStateToProps","productStore","category","list","productList","CurrentProduct","CurrentKeyword","Currentnv_mid","mapDispatchToProps","dispatch","ReviewNumber"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from 'react-router-dom';\r\n//import productStore from 'store/modules/productStore';\r\nimport { connect } from 'react-redux';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { changeCurrentKeyword, changeCurrentProduct, changeCurrentnv_mid, Change_ReviewNumber } from 'store/modules/productStore';\r\n//import productStore from 'store/modules/productStore';\r\n//import { handleClick } from 'container/ProductListContainer';\r\n//front-end\\src\\container\\ProductListContainer.js\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  margin: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ProductCard = (props) => {\r\n  const classes = useStyles();\r\n  //const { id, avatarSrc, title, subtitle, description, imgSrc, price, nv_mid } = props;\r\n  const { cat_id, name, date, img_url, price, nv_mid } = props;\r\n  const productURL = \"https://search.shopping.naver.com/detail/detail.nhn?nvMid=\" + props.nv_mid;\r\n  //세트인듯\r\n  const { changeCurrentProduct, changeCurrentKeyword, changeCurrentnv_mid } = props;\r\n  const clickDetail = () => {\r\n    changeCurrentProduct(name);\r\n    changeCurrentKeyword(\"무게감\");\r\n    changeCurrentnv_mid(props.nv_mid);\r\n\r\n    //여기서 리뷰를 바꾼다.\r\n    //filter 후 length 한 값들이 data \r\n\r\n    //title로 이름이 바뀌면\r\n    //그에 맞는 키워드로 바뀌고\r\n    //그에 맞는 리뷰들로 바꿔어야 한다.\r\n\r\n    //console.log(\">>>>>>props.changeCurrentKeyword \" + props.CurrentKeyword);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} style={{ backgroundColor: \"#E0E0E0\" }}>\r\n      <CardHeader\r\n        style={{ height: \"50px\" }}\r\n        avatar={<Avatar src={img_url} />}\r\n        title={name}\r\n\r\n      />\r\n      <CardMedia style={{ height: \"300px\", space: \"nowrap\" }} image={img_url} />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" component=\"p\" >\r\n\r\n          등록날짜 : {date}<br></br>\r\n          {price}원\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n\r\n        <Grid container spacing={6}>\r\n          < Grid item xs={12} sm={5}>\r\n            <Link to=\"/detail\">\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                fullWidth=\"bool\"\r\n                className={classes.margin}\r\n                onClick={clickDetail}\r\n              >\r\n                Detail\r\n          </Button>\r\n            </Link>\r\n          </ Grid>\r\n          < Grid item xs={12} sm={5}>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              fullWidth=\"bool\"\r\n              className={classes.margin}\r\n              href={productURL}\r\n            >\r\n              BUY NOW\r\n        </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ productStore }) => ({  //2\r\n  category: productStore.category,\r\n  list: productStore.productList,\r\n  CurrentProduct: productStore.CurrentProduct,\r\n  CurrentKeyword: productStore.CurrentKeyword,\r\n  Currentnv_mid: productStore.Currentnv_mid,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\r\n    changeCurrentKeyword: CurrentKeyword => dispatch(changeCurrentKeyword(CurrentKeyword)),\r\n    changeCurrentnv_mid: Currentnv_mid => dispatch(changeCurrentnv_mid(Currentnv_mid)),\r\n    Change_ReviewNumber: ReviewNumber => dispatch(Change_ReviewNumber(ReviewNumber)),\r\n\r\n  }\r\n};\r\n\r\nexport default connect( // 스토어와 연결\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ProductCard);\r\n\r\n"]},"metadata":{},"sourceType":"module"}