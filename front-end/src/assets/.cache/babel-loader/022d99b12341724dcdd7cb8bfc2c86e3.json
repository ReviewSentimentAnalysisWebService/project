{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\components\\\\Pagination\\\\PaginationList.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport PostProduct from './PostProduct';\nimport PaginationProduct from './PaginationProduct';\nimport { connect } from 'react-redux';\nimport productStore from 'store/modules/productStore';\nimport { changeProductList, changeCurrentProduct } from 'store/modules/productStore';\n\nconst PaginationList = props => {\n  const [productList, setProductList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const res = await axios.get('http://localhost:8080/productlist');\n      setProductList(res.data);\n    };\n\n    fetchPosts();\n  }, []); // const res = props.list;\n  // setProductList(res.data);\n  // Get current posts\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = productList.slice(indexOfFirstPost, indexOfLastPost); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PostProduct, {\n    list: currentPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(PaginationProduct, {\n    postsPerPage: postsPerPage,\n    totalPosts: productList.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })));\n}; // category.url 로 연결하고 catrgory 전달\n\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  //2\n  category: productStore.category,\n  list: productStore.productList,\n  CurrentProduct: productStore.CurrentProduct\n}); //import store name이 맞는거다\n//props로 넣어줄 액션 생성함수\n\n\nconst mapDispatchToProps = dispatch => ({\n  changeProductList: list => dispatch(changeProductList(list)),\n  changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct))\n});\n\nexport default connect( // 스토어와 연결\nmapStateToProps, mapDispatchToProps)(PaginationList);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/components/Pagination/PaginationList.js"],"names":["React","useState","useEffect","styled","axios","PostProduct","PaginationProduct","connect","productStore","changeProductList","changeCurrentProduct","PaginationList","props","productList","setProductList","currentPage","setCurrentPage","postsPerPage","fetchPosts","res","get","data","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length","mapStateToProps","category","list","CurrentProduct","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,4BAAxD;;AACA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACgB,YAAD,IAAiBhB,QAAQ,CAAC,EAAD,CAA/B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,UAAU,GAAG,YAAY;AAE3B,YAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,mCAAV,CAAlB;AACAN,MAAAA,cAAc,CAACK,GAAG,CAACE,IAAL,CAAd;AAEH,KALD;;AAOAH,IAAAA,UAAU;AACb,GATQ,EASN,EATM,CAAT,CAJ8B,CAe9B;AACA;AACA;;AACA,QAAMI,eAAe,GAAGP,WAAW,GAAGE,YAAtC;AACA,QAAMM,gBAAgB,GAAGD,eAAe,GAAGL,YAA3C;AACA,QAAMO,YAAY,GAAGX,WAAW,CAACY,KAAZ,CAAkBF,gBAAlB,EAAoCD,eAApC,CAArB,CApB8B,CAqB9B;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIX,cAAc,CAACW,UAAD,CAA7C;;AAGA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEH,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,iBAAD;AACI,IAAA,YAAY,EAAEP,YADlB;AAEI,IAAA,UAAU,EAAEJ,WAAW,CAACe,MAF5B;AAGI,IAAA,QAAQ,EAAEF,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAYH,CArCD,C,CAsCA;;;AAEA,MAAMG,eAAe,GAAG,CAAC;AAAErB,EAAAA;AAAF,CAAD,MAAuB;AAAG;AAC9CsB,EAAAA,QAAQ,EAAEtB,YAAY,CAACsB,QADoB;AAE3CC,EAAAA,IAAI,EAAEvB,YAAY,CAACK,WAFwB;AAG3CmB,EAAAA,cAAc,EAAExB,YAAY,CAACwB;AAHc,CAAvB,CAAxB,C,CAKA;AAEA;;;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCzB,EAAAA,iBAAiB,EAAEsB,IAAI,IAAIG,QAAQ,CAACzB,iBAAiB,CAACsB,IAAD,CAAlB,CADC;AAEpCrB,EAAAA,oBAAoB,EAAEsB,cAAc,IAAIE,QAAQ,CAACxB,oBAAoB,CAACsB,cAAD,CAArB;AAFZ,CAAL,CAAnC;;AAKA,eAAezB,OAAO,EAAE;AACpBsB,eADkB,EAElBI,kBAFkB,CAAP,CAGbtB,cAHa,CAAf","sourcesContent":["import React, { useState, useEffect, } from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nimport axios from \"axios\";\r\nimport PostProduct from './PostProduct';\r\nimport PaginationProduct from './PaginationProduct';\r\nimport { connect } from 'react-redux';\r\nimport productStore from 'store/modules/productStore';\r\nimport { changeProductList, changeCurrentProduct } from 'store/modules/productStore';\r\nconst PaginationList = (props) => {\r\n    const [productList, setProductList] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n\r\n            const res = await axios.get('http://localhost:8080/productlist');\r\n            setProductList(res.data);\r\n\r\n        };\r\n\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    // const res = props.list;\r\n    // setProductList(res.data);\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = productList.slice(indexOfFirstPost, indexOfLastPost);\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container mt-5'>\r\n                <PostProduct list={currentPosts} />\r\n                <PaginationProduct\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={productList.length}\r\n                    paginate={paginate}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n// category.url 로 연결하고 catrgory 전달\r\n\r\nconst mapStateToProps = ({ productStore }) => ({  //2\r\n    category: productStore.category,\r\n    list: productStore.productList,\r\n    CurrentProduct: productStore.CurrentProduct,\r\n});\r\n//import store name이 맞는거다\r\n\r\n//props로 넣어줄 액션 생성함수\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeProductList: list => dispatch(changeProductList(list)),\r\n    changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\r\n});\r\n\r\nexport default connect( // 스토어와 연결\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(PaginationList);"]},"metadata":{},"sourceType":"module"}