{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\view\\\\DetailPage\\\\Sections\\\\PieChart.js\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Card, CardHeader, CardContent, IconButton, Divider, Typography } from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from 'react-redux';\nimport productStore from 'store/modules/productStore';\nimport { changeCurrentKeyword, changeCurrentProduct, changeCategory } from 'store/modules/productStore';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst PieChart = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme(); // const data = {\n  //   datasets: [\n  //     {\n  //       data: [63, 15, 22, 25, 44, 65, 35, 12, 43, 40],\n  //       backgroundColor: [\n  //         theme.palette.primary.main,\n  //         theme.palette.error.main,\n  //         theme.palette.warning.main,\n  //         theme.palette.info.main,\n  //         theme.palette.secondary,\n  //         theme.palette.action.main,\n  //       ],\n  //       borderWidth: 8,\n  //       borderColor: theme.palette.white,\n  //       hoverBorderColor: theme.palette.white\n  //     }\n  //   ],\n  //   labels: [\n  //     'Desktop',\n  //     'Tablet',\n  //     'Mobile',\n  //     'test',\n  //     '123'\n  //   ],\n  // };\n\n  const data = props.graphData; // console.log(\"graphData    -> \" + props.graphData.datasets);\n  // console.log(\"graphData    -> \" + JSON.stringify(props.graphData));\n  // console.log(\"currentProduct    -> \" + props.CurrentProduct);\n\n  let titleString = props.CurrentProduct + \"'s Keyword\";\n  const options = {\n    legend: {\n      display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: {\n      padding: 0\n    },\n    onClick: e => {\n      console.log('index >> ' + JSON.stringify(e));\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n  const devices = [{\n    title: 'Desktop',\n    value: '63'\n  }, {\n    title: 'Tablet',\n    value: '15'\n  }, {\n    title: 'Mobile',\n    value: '23'\n  }, {\n    title: 'Desktop',\n    value: '63'\n  }, {\n    title: 'Tablet',\n    value: '15'\n  }, {\n    title: 'Mobile',\n    value: '23'\n  }, {\n    title: 'Desktop',\n    value: '63'\n  }, {\n    title: 'Tablet',\n    value: '15'\n  }, {\n    title: 'Mobile',\n    value: '23'\n  }];\n  const {\n    changeCurrentKeyword\n  } = props;\n\n  const keywordClick = keyword => {\n    changeCurrentKeyword(keyword);\n    console.log(\"changeCurrentKeyword\", props.CurrentKeyword);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(RefreshIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    })),\n    title: titleString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 14\n    }\n  }, \"Click Keyword \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, devices.map(device => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    fullWidth: \"true\",\n    color: \"primary\",\n    onClick: () => keywordClick({\n      device\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, device.title)))))));\n};\n\nPieChart.propTypes = {\n  className: PropTypes.string\n};\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  //2\n  CurrentProduct: productStore.CurrentProduct,\n  graphData: productStore.graphData,\n  CurrentKeyword: productStore.CurrentKeyword\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\n    changeCurrentKeyword: CurrentKeyword => dispatch(changeCurrentKeyword(CurrentKeyword))\n  };\n};\n\nexport default connect( // 스토어와 연결\nmapStateToProps, mapDispatchToProps)(PieChart);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/view/DetailPage/Sections/PieChart.js"],"names":["React","Doughnut","clsx","PropTypes","makeStyles","useTheme","Button","Card","CardHeader","CardContent","IconButton","Divider","Typography","LaptopMacIcon","PhoneIphoneIcon","RefreshIcon","TabletMacIcon","Grid","connect","productStore","changeCurrentKeyword","changeCurrentProduct","changeCategory","useStyles","theme","root","height","chartContainer","position","stats","marginTop","spacing","display","justifyContent","device","textAlign","padding","deviceIcon","color","palette","icon","PieChart","props","className","rest","classes","data","graphData","titleString","CurrentProduct","options","legend","responsive","maintainAspectRatio","animation","cutoutPercentage","layout","onClick","e","console","log","JSON","stringify","tooltips","enabled","mode","intersect","borderWidth","borderColor","divider","backgroundColor","white","titleFontColor","text","primary","bodyFontColor","secondary","footerFontColor","devices","title","value","keywordClick","keyword","CurrentKeyword","map","propTypes","string","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { connect } from 'react-redux';\r\nimport productStore from 'store/modules/productStore';\r\nimport { changeCurrentKeyword, changeCurrentProduct, changeCategory } from 'store/modules/productStore';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  chartContainer: {\r\n    position: 'relative',\r\n    height: '300px'\r\n  },\r\n  stats: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  device: {\r\n    textAlign: 'center',\r\n    padding: theme.spacing(1)\r\n  },\r\n  deviceIcon: {\r\n    color: theme.palette.icon\r\n  }\r\n}));\r\n\r\nconst PieChart = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  // const data = {\r\n  //   datasets: [\r\n  //     {\r\n  //       data: [63, 15, 22, 25, 44, 65, 35, 12, 43, 40],\r\n  //       backgroundColor: [\r\n  //         theme.palette.primary.main,\r\n  //         theme.palette.error.main,\r\n  //         theme.palette.warning.main,\r\n  //         theme.palette.info.main,\r\n  //         theme.palette.secondary,\r\n  //         theme.palette.action.main,\r\n  //       ],\r\n  //       borderWidth: 8,\r\n  //       borderColor: theme.palette.white,\r\n  //       hoverBorderColor: theme.palette.white\r\n  //     }\r\n  //   ],\r\n  //   labels: [\r\n  //     'Desktop',\r\n  //     'Tablet',\r\n  //     'Mobile',\r\n  //     'test',\r\n  //     '123'\r\n  //   ],\r\n  // };\r\n\r\n  const data = props.graphData;\r\n  // console.log(\"graphData    -> \" + props.graphData.datasets);\r\n  // console.log(\"graphData    -> \" + JSON.stringify(props.graphData));\r\n  // console.log(\"currentProduct    -> \" + props.CurrentProduct);\r\n\r\n  let titleString = props.CurrentProduct + \"'s Keyword\";\r\n\r\n  const options = {\r\n    legend: {\r\n      display: true\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    onClick: (e) => {\r\n      console.log('index >> ' + JSON.stringify(e));\r\n    },\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      borderWidth: 1,\r\n      borderColor: theme.palette.divider,\r\n      backgroundColor: theme.palette.white,\r\n      titleFontColor: theme.palette.text.primary,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      footerFontColor: theme.palette.text.secondary\r\n    },\r\n\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: '63',\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: '15',\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: '23',\r\n    },\r\n    {\r\n      title: 'Desktop',\r\n      value: '63',\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: '15',\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: '23',\r\n    }, {\r\n      title: 'Desktop',\r\n      value: '63',\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: '15',\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: '23',\r\n    }\r\n  ];\r\n  const { changeCurrentKeyword } = props;\r\n  const keywordClick = (keyword) => {\r\n\r\n\r\n    changeCurrentKeyword(keyword);\r\n    console.log(\"changeCurrentKeyword\", props.CurrentKeyword);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        action={\r\n          <IconButton size=\"small\">\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        }\r\n        title={titleString}\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n\r\n          />\r\n        </div>\r\n        <div><p>Click Keyword </p></div>\r\n        <div className={classes.stats}>\r\n\r\n          <Grid container spacing={1}>\r\n            {devices.map(device => (\r\n              <Grid item xs={12} sm={3}>\r\n                <Button variant=\"outlined\" fullWidth='true' color=\"primary\" onClick={() => keywordClick({ device })} >{device.title}</Button>\r\n              </Grid>\r\n\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n\r\n        {/* <div className={classes.stats}>\r\n          {devices.map(device => (\r\n            <div\r\n              className={classes.device}\r\n              key={device.title}\r\n            >\r\n\r\n              <Typography variant=\"body1\">{device.title}</Typography>\r\n              <Typography\r\n                style={{ color: device.color }}\r\n                variant=\"h2\"\r\n              >\r\n                {device.value}%\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div> */}\r\n      </CardContent>\r\n    </Card >\r\n  );\r\n};\r\n\r\nPieChart.propTypes = {\r\n  className: PropTypes.string\r\n};\r\nconst mapStateToProps = ({ productStore }) => ({  //2\r\n  CurrentProduct: productStore.CurrentProduct,\r\n  graphData: productStore.graphData,\r\n  CurrentKeyword: productStore.CurrentKeyword,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\r\n    changeCurrentKeyword: CurrentKeyword => dispatch(changeCurrentKeyword(CurrentKeyword)),\r\n  }\r\n};\r\n\r\nexport default connect( // 스토어와 연결\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(PieChart);\r\n\r\n"]},"metadata":{},"sourceType":"module"}