{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\view\\\\DetailPage\\\\Sections\\\\RadarChart.js\";\nimport React from 'react';\nimport { Radar } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Card, CardHeader, CardContent, IconButton, Divider, Typography } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from 'react-redux';\nimport productStore from 'store/modules/productStore';\nimport { changeCurrentKeyword, changeCurrentProduct, changeReview } from 'store/modules/productStore';\nimport testData from './data';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst RadarChart = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  let titleString = props.CurrentProduct + \"'s Sentimental Analysis\";\n  const data = {\n    labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n    datasets: [{\n      label: 'My First dataset',\n      backgroundColor: 'rgba(179,181,198,0.2)',\n      borderColor: 'rgba(179,181,198,1)',\n      pointBackgroundColor: 'rgba(179,181,198,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(179,181,198,1)',\n      data: [65, 59, 90, 81, 56, 55, 40]\n    }, {\n      label: \"Student B\",\n      backgroundColor: \"transparent\",\n      borderColor: \"rgba(0,0,200,0.6)\",\n      fill: false,\n      radius: 6,\n      pointRadius: 6,\n      pointBorderWidth: 3,\n      pointBackgroundColor: \"cornflowerblue\",\n      pointBorderColor: \"rgba(0,0,200,0.6)\",\n      pointHoverRadius: 10,\n      data: [54, 65, 60, 70, 70, 75]\n    }]\n  };\n  const options = {\n    legend: {\n      display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RefreshIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    })),\n    title: titleString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Radar, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })));\n};\n\nRadarChart.propTypes = {\n  className: PropTypes.string\n};\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  //2\n  CurrentProduct: productStore.CurrentProduct,\n  CurrentKeyword: productStore.CurrentKeyword,\n  reviewNumber: productStore.reviewNumber,\n  reviewLabels: productStore.reviewLabels,\n  ReviewData: productStore.ReviewData\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\n    changeCurrentKeyword: CurrentKeyword => dispatch(changeCurrentKeyword(CurrentKeyword)),\n    changeReview: ReviewData => dispatch(changeReview(ReviewData))\n  };\n};\n\nexport default connect( // 스토어와 연결\nmapStateToProps, mapDispatchToProps)(RadarChart);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/view/DetailPage/Sections/RadarChart.js"],"names":["React","Radar","clsx","PropTypes","makeStyles","useTheme","Button","Card","CardHeader","CardContent","IconButton","Divider","Typography","RefreshIcon","Grid","connect","productStore","changeCurrentKeyword","changeCurrentProduct","changeReview","testData","useStyles","theme","root","height","chartContainer","position","stats","marginTop","spacing","display","justifyContent","device","textAlign","padding","deviceIcon","color","palette","icon","RadarChart","props","className","rest","classes","titleString","CurrentProduct","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","fill","radius","pointRadius","pointBorderWidth","pointHoverRadius","options","legend","responsive","maintainAspectRatio","animation","cutoutPercentage","layout","tooltips","enabled","mode","intersect","borderWidth","divider","white","titleFontColor","text","primary","bodyFontColor","secondary","footerFontColor","propTypes","string","mapStateToProps","CurrentKeyword","reviewNumber","reviewLabels","ReviewData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Radar } from 'react-chartjs-2';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    IconButton,\r\n    Divider,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { connect } from 'react-redux';\r\nimport productStore from 'store/modules/productStore';\r\nimport { changeCurrentKeyword, changeCurrentProduct, changeReview } from 'store/modules/productStore';\r\nimport testData from './data';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100%'\r\n    },\r\n    chartContainer: {\r\n        position: 'relative',\r\n        height: '300px'\r\n    },\r\n    stats: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    device: {\r\n        textAlign: 'center',\r\n        padding: theme.spacing(1)\r\n    },\r\n    deviceIcon: {\r\n        color: theme.palette.icon\r\n    }\r\n}));\r\n\r\nconst RadarChart = props => {\r\n    const { className, ...rest } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    let titleString = props.CurrentProduct + \"'s Sentimental Analysis\";\r\n\r\n\r\n    const data = {\r\n        labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\r\n        datasets: [\r\n            {\r\n                label: 'My First dataset',\r\n                backgroundColor: 'rgba(179,181,198,0.2)',\r\n                borderColor: 'rgba(179,181,198,1)',\r\n                pointBackgroundColor: 'rgba(179,181,198,1)',\r\n                pointBorderColor: '#fff',\r\n                pointHoverBackgroundColor: '#fff',\r\n                pointHoverBorderColor: 'rgba(179,181,198,1)',\r\n                data: [65, 59, 90, 81, 56, 55, 40]\r\n            },\r\n            {\r\n                label: \"Student B\",\r\n                backgroundColor: \"transparent\",\r\n                borderColor: \"rgba(0,0,200,0.6)\",\r\n                fill: false,\r\n                radius: 6,\r\n                pointRadius: 6,\r\n                pointBorderWidth: 3,\r\n                pointBackgroundColor: \"cornflowerblue\",\r\n                pointBorderColor: \"rgba(0,0,200,0.6)\",\r\n                pointHoverRadius: 10,\r\n                data: [54, 65, 60, 70, 70, 75]\r\n            }]\r\n    };\r\n    const options = {\r\n        legend: {\r\n            display: true\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n\r\n        tooltips: {\r\n            enabled: true,\r\n            mode: 'index',\r\n            intersect: false,\r\n            borderWidth: 1,\r\n            borderColor: theme.palette.divider,\r\n            backgroundColor: theme.palette.white,\r\n            titleFontColor: theme.palette.text.primary,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            footerFontColor: theme.palette.text.secondary\r\n        },\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <CardHeader\r\n                action={\r\n                    <IconButton size=\"small\">\r\n                        <RefreshIcon />\r\n                    </IconButton>\r\n                }\r\n                title={titleString}\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n                <Radar\r\n                    data={data}\r\n                    options={options}\r\n                />\r\n            </CardContent>\r\n        </Card >\r\n    );\r\n};\r\n\r\nRadarChart.propTypes = {\r\n    className: PropTypes.string\r\n};\r\nconst mapStateToProps = ({ productStore }) => ({  //2\r\n    CurrentProduct: productStore.CurrentProduct,\r\n    CurrentKeyword: productStore.CurrentKeyword,\r\n    reviewNumber: productStore.reviewNumber,\r\n    reviewLabels: productStore.reviewLabels,\r\n    ReviewData: productStore.ReviewData,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\r\n        changeCurrentKeyword: CurrentKeyword => dispatch(changeCurrentKeyword(CurrentKeyword)),\r\n        changeReview: ReviewData => dispatch(changeReview(ReviewData)),\r\n    }\r\n};\r\n\r\nexport default connect( // 스토어와 연결\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(RadarChart);\r\n\r\n"]},"metadata":{},"sourceType":"module"}