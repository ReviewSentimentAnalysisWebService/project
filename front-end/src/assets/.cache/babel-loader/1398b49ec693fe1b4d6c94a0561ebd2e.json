{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\components\\\\redux\\\\Category.js\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport categories from './categories';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab'; //카테고리 리스트를 받아와서 출력한다\n//onclick된거로 값이 바뀐다.\n//productList가 onclick된 카테고리로 바뀌려면?\n//카테고리 값마다 불러오는 productList가 달라야 한다?\n//그렇다면 productList_Category에 각 값마다 달라져야하는 데이터를 json형식으로 저장해두고\n//카테고리가 변화하면 안에 list도 그 변화를 감지하고 바뀌어야 한다.\n//와우\n\nimport styles from \"assets/jss/material-kit-react/views/componentsSections/tabsStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(styles);\n\nconst Test = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: \"Item One\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Item Two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Item Three\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n}; //\n\n\nconst CategoriesBlock = styled.div`\n  display: flex;\n  padding: 1rem;\n  width: 768px;\n  margin: 0 auto;\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    overflow-x: auto;\n  }\n`;\nconst CategoryNavbar = styled.div`\n  font-size: 1.125rem;\n  cursor: pointer;\n  white-space: pre;\n  text-decoration: none;\n  color: inherit;\n  padding-bottom: 0.25rem;\n  &:hover {\n    color: #495057;\n  }\n  &.active {\n    font-weight: 600;\n    border-bottom: 2px solid #22b8cf;\n    color: #22b8cf;\n    &:hover {\n      color: #3bc9db;\n    }\n  }\n  & + & {\n    margin-left: 1rem;\n  }\n`;\n\nconst CategoryItem = ({\n  category,\n  onClick\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CategoryNavbar, {\n    key: category.name,\n    onClick: onClick,\n    activeClassName: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, category));\n};\n\nconst Category = ({\n  selected,\n  onSelect\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Test, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CategoriesBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, categories.map(category => /*#__PURE__*/React.createElement(CategoryItem, {\n    category: category,\n    activeClassName: \"active\",\n    active: selected === category,\n    onClick: () => onSelect(category),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Category;","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/components/redux/Category.js"],"names":["React","styled","categories","Paper","Tabs","Tab","styles","makeStyles","useStyles","Test","classes","value","setValue","useState","handleChange","event","newValue","root","CategoriesBlock","div","CategoryNavbar","CategoryItem","category","onClick","name","Category","selected","onSelect","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,qEAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACD,MAAD,CAA5B;;AAEA,MAAMG,IAAI,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAGF,SAAS,EAAzB;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACa,QAAN,CAAe,CAAf,CAA1B;;AAEA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCJ,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEN,OAAO,CAACO,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,QAAQ,EAAEG,YAFZ;AAGE,IAAA,cAAc,EAAC,SAHjB;AAIE,IAAA,SAAS,EAAC,SAJZ;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF;AAeD,CAxBD,C,CAyBA;;;AACA,MAAMI,eAAe,GAAGjB,MAAM,CAACkB,GAAI;;;;;;;;;CAAnC;AAUA,MAAMC,cAAc,GAAGnB,MAAM,CAACkB,GAAI;;;;;;;;;;;;;;;;;;;;;CAAlC;;AAwBA,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAC9C,sBACE,uDACE,oBAAC,cAAD;AACE,IAAA,GAAG,EAAED,QAAQ,CAACE,IADhB;AAEE,IAAA,OAAO,EAAED,OAFX;AAGE,IAAA,eAAe,EAAC,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,QALH,CADF,CADF;AAWD,CAZD;;AAcA,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AAC3C,QAAMjB,OAAO,GAAGF,SAAS,EAAzB;AACA,sBACE,uDACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,UAAU,CAAC0B,GAAX,CAAeN,QAAQ,iBACtB,oBAAC,YAAD;AAEE,IAAA,QAAQ,EAAEA,QAFZ;AAGE,IAAA,eAAe,EAAC,QAHlB;AAIE,IAAA,MAAM,EAAEI,QAAQ,KAAKJ,QAJvB;AAKE,IAAA,OAAO,EAAE,MAAMK,QAAQ,CAACL,QAAD,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAgBD,CAlBD;;AAoBA,eAAeG,QAAf","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport categories from './categories';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n//카테고리 리스트를 받아와서 출력한다\r\n//onclick된거로 값이 바뀐다.\r\n//productList가 onclick된 카테고리로 바뀌려면?\r\n//카테고리 값마다 불러오는 productList가 달라야 한다?\r\n//그렇다면 productList_Category에 각 값마다 달라져야하는 데이터를 json형식으로 저장해두고\r\n//카테고리가 변화하면 안에 list도 그 변화를 감지하고 바뀌어야 한다.\r\n//와우\r\nimport styles from \"assets/jss/material-kit-react/views/componentsSections/tabsStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst Test = () => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Tab label=\"Item One\" />\r\n        <Tab label=\"Item Two\" />\r\n        <Tab label=\"Item Three\" />\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\n//\r\nconst CategoriesBlock = styled.div`\r\n  display: flex;\r\n  padding: 1rem;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n`;\r\nconst CategoryNavbar = styled.div`\r\n  font-size: 1.125rem;\r\n  cursor: pointer;\r\n  white-space: pre;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  padding-bottom: 0.25rem;\r\n  &:hover {\r\n    color: #495057;\r\n  }\r\n  &.active {\r\n    font-weight: 600;\r\n    border-bottom: 2px solid #22b8cf;\r\n    color: #22b8cf;\r\n    &:hover {\r\n      color: #3bc9db;\r\n    }\r\n  }\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\n\r\nconst CategoryItem = ({ category, onClick }) => {\r\n  return (\r\n    <>\r\n      <CategoryNavbar\r\n        key={category.name}\r\n        onClick={onClick}\r\n        activeClassName=\"active\"\r\n      >\r\n        {category}\r\n      </CategoryNavbar>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Category = ({ selected, onSelect }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Test />\r\n      <CategoriesBlock>\r\n        {categories.map(category => (\r\n          <CategoryItem\r\n\r\n            category={category}\r\n            activeClassName=\"active\"\r\n            active={selected === category}\r\n            onClick={() => onSelect(category)}\r\n          />\r\n        ))}\r\n      </CategoriesBlock>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}