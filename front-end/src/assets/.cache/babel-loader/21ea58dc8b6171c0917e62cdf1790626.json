{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\container\\\\CategoryContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ApiService from \"ApiService\";\nimport { changeCategory } from '../store/modules/productStore';\nimport { changeProductList } from '../store/modules/productStore';\nimport { changeCategoryList } from '../store/modules/productStore';\nimport ProductList_Category from 'components/redux/ProductList_Category';\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport axios from 'axios';\n\nclass CategoryContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadCategoryList = () => {\n      ApiService.fetchCategory().then(res => {\n        this.setState({\n          categoryList: res.data\n        });\n        console.log(\"asdf\", JSON.stringify(res.data));\n        changeCategoryList(this.state.categoryList);\n        console.log(\"product\", this.state.categoryList);\n      }).catch(err => {\n        console.log(\"reload error\", err);\n      });\n    };\n\n    this.handleSelect = category => {\n      const {\n        changeCategory\n      } = this.props;\n      changeCategory(category); //바꾸는 부분 \n\n      const {\n        changeProductList\n      } = this.props;\n      console.log(\"changeCategory -> ! \" + changeCategory);\n      this.state = {\n        product: []\n      };\n\n      const getProductList_Category = () => {\n        let product = [];\n\n        switch (category) {\n          case 'all':\n            changeProductList(ProductList_Category.productList_All);\n            break;\n\n          case 'notebook':\n            changeProductList(ProductList_Category.productList_Notebook);\n            break;\n\n          case 'mouse':\n            changeProductList(ProductList_Category.productList_Mouse);\n            break;\n\n          case 'skin':\n            changeProductList(ProductList_Category.productList_Skin);\n            break;\n\n          case 'lotions':\n            changeProductList(ProductList_Category.productList_Lotions);\n            console.log(\"test ->>>\", axios.get(\"http://localhost:8080/products\").then(response => this.setState({\n              product: response.data\n            }))); //ㅠㅅㅠ\n\n            break;\n        }\n      };\n\n      getProductList_Category();\n    };\n\n    this.state = {\n      categoryList: []\n    };\n  }\n\n  componentDidMount() {\n    this.reloadCategoryList();\n  } //생성되자마자 -> 한번만 \n\n\n  render() {\n    const {\n      category\n    } = this.props; // console.log(\">>>>>.\" + category)\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomTabs, {\n      onSelect: this.handleSelect,\n      selected: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }));\n  }\n\n} //props로 넣어줄 스토어의 상태값\n\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  category: productStore.category,\n  list: productStore.productList,\n  CategoryList: productStore.CategoryList\n}); //props로 넣어줄 액션 생성함수\n\n\nconst mapDispatchToProps = dispatch => ({\n  changeCategory: category => dispatch(changeCategory(category)),\n  changeProductList: list => dispatch(changeProductList(list)),\n  changeCategoryList: CategoryList => dispatch(changeCategoryList(CategoryList))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryContainer);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/container/CategoryContainer.js"],"names":["React","Component","connect","ApiService","changeCategory","changeProductList","changeCategoryList","ProductList_Category","CustomTabs","axios","CategoryContainer","constructor","props","reloadCategoryList","fetchCategory","then","res","setState","categoryList","data","console","log","JSON","stringify","state","catch","err","handleSelect","category","product","getProductList_Category","productList_All","productList_Notebook","productList_Mouse","productList_Skin","productList_Lotions","get","response","componentDidMount","render","mapStateToProps","productStore","list","productList","CategoryList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ApiService from \"ApiService\";\r\nimport { changeCategory } from '../store/modules/productStore';\r\nimport { changeProductList } from '../store/modules/productStore';\r\nimport { changeCategoryList } from '../store/modules/productStore';\r\n\r\nimport ProductList_Category from 'components/redux/ProductList_Category';\r\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\r\n\r\nimport axios from 'axios';\r\n\r\nclass CategoryContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            categoryList: [],\r\n\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.reloadCategoryList();\r\n\r\n    }\r\n    //생성되자마자 -> 한번만 \r\n\r\n    reloadCategoryList = () => {\r\n        ApiService.fetchCategory()\r\n            .then((res) => {\r\n                this.setState({\r\n                    categoryList: res.data,\r\n\r\n                });\r\n                console.log(\"asdf\", JSON.stringify(res.data));\r\n\r\n                changeCategoryList(this.state.categoryList);\r\n                console.log(\"product\", this.state.categoryList);\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"reload error\", err);\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    handleSelect = category => {\r\n        const { changeCategory } = this.props;\r\n        changeCategory(category);\r\n\r\n        //바꾸는 부분 \r\n        const { changeProductList } = this.props;\r\n        console.log(\"changeCategory -> ! \" + changeCategory);\r\n        this.state = {\r\n            product: []\r\n        };\r\n        const getProductList_Category = () => {\r\n            let product = [];\r\n            switch (category) {\r\n                case 'all':\r\n                    changeProductList(ProductList_Category.productList_All);\r\n                    break;\r\n                case 'notebook':\r\n                    changeProductList(ProductList_Category.productList_Notebook);\r\n                    break;\r\n                case 'mouse':\r\n                    changeProductList(ProductList_Category.productList_Mouse);\r\n                    break;\r\n                case 'skin':\r\n                    changeProductList(ProductList_Category.productList_Skin);\r\n                    break;\r\n                case 'lotions':\r\n                    changeProductList(ProductList_Category.productList_Lotions);\r\n                    console.log(\"test ->>>\", axios.get(\"http://localhost:8080/products\").then((response) => this.setState({\r\n                        product: response.data,\r\n                    })));\r\n\r\n                    //ㅠㅅㅠ\r\n                    break;\r\n            }\r\n        }\r\n        getProductList_Category();\r\n    };\r\n\r\n    render() {\r\n        const { category } = this.props;\r\n        // console.log(\">>>>>.\" + category)\r\n        return (<>\r\n            <br></br><br></br>\r\n            <a></a>\r\n            <CustomTabs\r\n                onSelect={this.handleSelect} selected={category}\r\n            />\r\n        </>);\r\n\r\n    }\r\n\r\n}\r\n//props로 넣어줄 스토어의 상태값\r\nconst mapStateToProps = ({ productStore }) => ({\r\n    category: productStore.category,\r\n    list: productStore.productList,\r\n    CategoryList: productStore.CategoryList,\r\n});\r\n\r\n//props로 넣어줄 액션 생성함수\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeCategory: category => dispatch(changeCategory(category)),\r\n    changeProductList: list => dispatch(changeProductList(list)),\r\n    changeCategoryList: CategoryList => dispatch(changeCategoryList(CategoryList)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(CategoryContainer);"]},"metadata":{},"sourceType":"module"}