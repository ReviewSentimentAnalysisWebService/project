{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\components\\\\Pagination\\\\PaginationList.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport PostProduct from './PostProduct';\nimport PaginationProduct from './PaginationProduct';\n\nconst PaginationList = () => {\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(3);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n      setPosts(res.data);\n    };\n\n    fetchPosts();\n  }, []); // Get current posts\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PostProduct, {\n    posts: currentPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(PaginationProduct, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })));\n}; // category.url 로 연결하고 catrgory 전달\n\n\nexport default PaginationList;","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/components/Pagination/PaginationList.js"],"names":["React","useState","useEffect","styled","axios","PostProduct","PaginationProduct","PaginationList","posts","setPosts","currentPage","setCurrentPage","postsPerPage","fetchPosts","res","get","data","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACW,YAAD,IAAiBX,QAAQ,CAAC,CAAD,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,UAAU,GAAG,YAAY;AAC3B,YAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,4CAAV,CAAlB;AACAN,MAAAA,QAAQ,CAACK,GAAG,CAACE,IAAL,CAAR;AACH,KAHD;;AAKAH,IAAAA,UAAU;AACb,GAPQ,EAON,EAPM,CAAT,CALyB,CAczB;;AACA,QAAMI,eAAe,GAAGP,WAAW,GAAGE,YAAtC;AACA,QAAMM,gBAAgB,GAAGD,eAAe,GAAGL,YAA3C;AACA,QAAMO,YAAY,GAAGX,KAAK,CAACY,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB,CAjByB,CAmBzB;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIX,cAAc,CAACW,UAAD,CAA7C;;AAGA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEH,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,iBAAD;AACI,IAAA,YAAY,EAAEP,YADlB;AAEI,IAAA,UAAU,EAAEJ,KAAK,CAACe,MAFtB;AAGI,IAAA,QAAQ,EAAEF,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAYH,CAnCD,C,CAoCA;;;AACA,eAAed,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nimport axios from \"axios\";\r\nimport PostProduct from './PostProduct';\r\nimport PaginationProduct from './PaginationProduct';\r\n\r\nconst PaginationList = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(3);\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\r\n            setPosts(res.data);\r\n        };\r\n\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='container mt-5'>\r\n                <PostProduct posts={currentPosts} />\r\n                <PaginationProduct\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={posts.length}\r\n                    paginate={paginate}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n// category.url 로 연결하고 catrgory 전달\r\nexport default PaginationList;\r\n"]},"metadata":{},"sourceType":"module"}