{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\components\\\\Review\\\\ReivewList.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardHeader, CardContent, Button, Divider, Table, TableBody, TableCell, TableHead, TableRow, Tooltip, TableSortLabel } from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport mockData from './data'; //import { StatusBullet } from 'StatusBullet';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 800\n  },\n  statusContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  status: {\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\nconst statusColors = {\n  delivered: 'success',\n  pending: 'info',\n  refunded: 'danger'\n};\n\nconst ReviewList = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [reviews] = useState(mockData);\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      size: \"small\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"New entry\"),\n    title: \"Latest Orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, \"Order Ref\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(TableCell, {\n    sortDirection: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    enterDelay: 300,\n    title: \"Sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: true,\n    direction: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }\n  }, \"Date\"))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, \"Status\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, reviews.map(review => /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    key: review.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, review.ref), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, review.customer.name), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, moment(review.createdAt).format('DD/MM/YYYY')), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.statusContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }\n  }, review.status))))))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    variant: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"View all \", /*#__PURE__*/React.createElement(ArrowRightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 20\n    }\n  }))));\n};\n\nReviewList.propTypes = {\n  className: PropTypes.string\n};\nexport default ReviewList;","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/components/Review/ReivewList.js"],"names":["React","useState","clsx","moment","PerfectScrollbar","PropTypes","makeStyles","Card","CardActions","CardHeader","CardContent","Button","Divider","Table","TableBody","TableCell","TableHead","TableRow","Tooltip","TableSortLabel","ArrowRightIcon","mockData","useStyles","theme","root","content","padding","inner","minWidth","statusContainer","display","alignItems","status","marginRight","spacing","actions","justifyContent","statusColors","delivered","pending","refunded","ReviewList","props","className","rest","classes","reviews","map","review","id","ref","customer","name","createdAt","format","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SACEC,IADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,MALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,SARF,EASEC,SATF,EAUEC,SAVF,EAWEC,QAXF,EAYEC,OAZF,EAaEC,cAbF,QAcO,mBAdP;AAeA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,OAAOC,QAAP,MAAqB,QAArB,C,CACA;;AAEA,MAAMC,SAAS,GAAGhB,UAAU,CAACiB,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE,EAD+B;AAErCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GAF4B;AAKrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAL8B;AAQrCC,EAAAA,eAAe,EAAE;AACfC,IAAAA,OAAO,EAAE,MADM;AAEfC,IAAAA,UAAU,EAAE;AAFG,GARoB;AAYrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd;AADP,GAZ6B;AAerCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cAAc,EAAE;AADT;AAf4B,CAAL,CAAN,CAA5B;AAoBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,SADQ;AAEnBC,EAAAA,OAAO,EAAE,MAFU;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;;AAMA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAM;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,MAAyBF,KAA/B;AAEA,QAAMG,OAAO,GAAGvB,SAAS,EAAzB;AAEA,QAAM,CAACwB,OAAD,IAAY7C,QAAQ,CAACoB,QAAD,CAA1B;AAEA,sBACE,oBAAC,IAAD,oBACMuB,IADN;AAEE,IAAA,SAAS,EAAE1C,IAAI,CAAC2C,OAAO,CAACrB,IAAT,EAAemB,SAAf,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIE,oBAAC,UAAD;AACE,IAAA,MAAM,eACJ,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,OAAO,EAAC,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ;AAUE,IAAA,KAAK,EAAC,eAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAgBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAiBE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEE,OAAO,CAACpB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEoB,OAAO,CAAClB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,oBAAC,SAAD;AAAW,IAAA,aAAa,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,UAAU,EAAE,GADd;AAEE,IAAA,KAAK,EAAC,MAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,cAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,SAAS,EAAC,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADF,CAHF,eAgBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,CADF,CADF,eAqBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGmB,OAAO,CAACC,GAAR,CAAYC,MAAM,iBACjB,oBAAC,QAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,GAAG,EAAEA,MAAM,CAACC,EAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYD,MAAM,CAACE,GAAnB,CAJF,eAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYF,MAAM,CAACG,QAAP,CAAgBC,IAA5B,CALF,eAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjD,MAAM,CAAC6C,MAAM,CAACK,SAAR,CAAN,CAAyBC,MAAzB,CAAgC,YAAhC,CADH,CANF,eASE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAAChB,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGmB,MAAM,CAAChB,MAFV,CADF,CATF,CADD,CADH,CArBF,CADF,CADF,CADF,CAjBF,eAiEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjEF,eAkEE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEa,OAAO,CAACV,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,OAAO,EAAC,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAKW,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALX,CADF,CAlEF,CADF;AA8ED,CArFD;;AAuFAM,UAAU,CAACc,SAAX,GAAuB;AACrBZ,EAAAA,SAAS,EAAEtC,SAAS,CAACmD;AADA,CAAvB;AAIA,eAAef,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  TableSortLabel\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport mockData from './data';\n//import { StatusBullet } from 'StatusBullet';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 800\n  },\n  statusContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  status: {\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst statusColors = {\n  delivered: 'success',\n  pending: 'info',\n  refunded: 'danger'\n};\n\nconst ReviewList = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [reviews] = useState(mockData);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            variant=\"outlined\"\n          >\n            New entry\n          </Button>\n        }\n        title=\"Latest Orders\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Order Ref</TableCell>\n                  <TableCell>Customer</TableCell>\n                  <TableCell sortDirection=\"desc\">\n                    <Tooltip\n                      enterDelay={300}\n                      title=\"Sort\"\n                    >\n                      <TableSortLabel\n                        active\n                        direction=\"desc\"\n                      >\n                        Date\n                      </TableSortLabel>\n                    </Tooltip>\n                  </TableCell>\n                  <TableCell>Status</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {reviews.map(review => (\n                  <TableRow\n                    hover\n                    key={review.id}\n                  >\n                    <TableCell>{review.ref}</TableCell>\n                    <TableCell>{review.customer.name}</TableCell>\n                    <TableCell>\n                      {moment(review.createdAt).format('DD/MM/YYYY')}\n                    </TableCell>\n                    <TableCell>\n                      <div className={classes.statusContainer}>\n\n                        {review.status}\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all <ArrowRightIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nReviewList.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ReviewList;\n\n"]},"metadata":{},"sourceType":"module"}