{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\container\\\\CategoryContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Category from 'components/redux/Category';\nimport ApiService from \"ApiService\";\nimport { changeCategory } from '../store/modules/productStore';\nimport { changeProductList } from '../store/modules/productStore';\nimport categories from 'components/redux/categories';\nimport ProductList_Category from 'components/redux/ProductList_Category';\n\nclass CategoryContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSelect = category => {\n      const {\n        changeCategory\n      } = this.props;\n      changeCategory(category);\n      const {\n        changeProductList\n      } = this.props;\n      const query = null;\n\n      const getProductList_Category = () => {\n        switch (category) {\n          case 'all':\n            changeProductList(ProductList_Category.productList_All);\n            break;\n\n          case 'notebook':\n            changeProductList(ProductList_Category.productList_Notebook);\n            break;\n\n          case 'mouse':\n            changeProductList(ProductList_Category.productList_Mouse);\n            break;\n\n          case 'skin':\n            changeProductList(ProductList_Category.productList_Skin);\n            break;\n\n          case 'lotions':\n            changeProductList(ProductList_Category.productList_Lotions);\n            console.log(\"test ->>>\", ApiService.fetchProduct().then(res => {\n              this.setState({\n                product: res.data\n              });\n            }));\n            break;\n        }\n      };\n\n      getProductList_Category();\n    };\n  }\n\n  render() {\n    const {\n      category\n    } = this.props; // console.log(\">>>>>.\" + category)\n\n    return /*#__PURE__*/React.createElement(Category, {\n      onSelect: this.handleSelect,\n      selected: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    });\n  }\n\n} //props로 넣어줄 스토어의 상태값\n\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  category: productStore.category,\n  list: productStore.productList\n}); //props로 넣어줄 액션 생성함수\n\n\nconst mapDispatchToProps = dispatch => ({\n  changeCategory: category => dispatch(changeCategory(category)),\n  changeProductList: list => dispatch(changeProductList(list))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryContainer);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/container/CategoryContainer.js"],"names":["React","Component","connect","Category","ApiService","changeCategory","changeProductList","categories","ProductList_Category","CategoryContainer","handleSelect","category","props","query","getProductList_Category","productList_All","productList_Notebook","productList_Mouse","productList_Skin","productList_Lotions","console","log","fetchProduct","then","res","setState","product","data","render","mapStateToProps","productStore","list","productList","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;;AACA,MAAMC,iBAAN,SAAgCR,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SACtCS,YADsC,GACvBC,QAAQ,IAAI;AACvB,YAAM;AAAEN,QAAAA;AAAF,UAAqB,KAAKO,KAAhC;AACAP,MAAAA,cAAc,CAACM,QAAD,CAAd;AACA,YAAM;AAAEL,QAAAA;AAAF,UAAwB,KAAKM,KAAnC;AACA,YAAMC,KAAK,GAAG,IAAd;;AACA,YAAMC,uBAAuB,GAAG,MAAM;AAElC,gBAAQH,QAAR;AACI,eAAK,KAAL;AACIL,YAAAA,iBAAiB,CAACE,oBAAoB,CAACO,eAAtB,CAAjB;AACA;;AACJ,eAAK,UAAL;AACIT,YAAAA,iBAAiB,CAACE,oBAAoB,CAACQ,oBAAtB,CAAjB;AACA;;AACJ,eAAK,OAAL;AACIV,YAAAA,iBAAiB,CAACE,oBAAoB,CAACS,iBAAtB,CAAjB;AACA;;AACJ,eAAK,MAAL;AACIX,YAAAA,iBAAiB,CAACE,oBAAoB,CAACU,gBAAtB,CAAjB;AACA;;AACJ,eAAK,SAAL;AACIZ,YAAAA,iBAAiB,CAACE,oBAAoB,CAACW,mBAAtB,CAAjB;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBjB,UAAU,CAACkB,YAAX,GACpBC,IADoB,CACdC,GAAD,IAAS;AACX,mBAAKC,QAAL,CAAc;AACVC,gBAAAA,OAAO,EAAEF,GAAG,CAACG;AADH,eAAd;AAIH,aANoB,CAAzB;AAOA;AAtBR;AAwBH,OA1BD;;AA2BAb,MAAAA,uBAAuB;AAC1B,KAlCqC;AAAA;;AAoCtCc,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEjB,MAAAA;AAAF,QAAe,KAAKC,KAA1B,CADK,CAEL;;AACA,wBAAO,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKF,YAAzB;AAAuC,MAAA,QAAQ,EAAEC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEH;;AAzCqC,C,CA4C1C;;;AACA,MAAMkB,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAuB;AAC3CnB,EAAAA,QAAQ,EAAEmB,YAAY,CAACnB,QADoB;AAE3CoB,EAAAA,IAAI,EAAED,YAAY,CAACE;AAFwB,CAAvB,CAAxB,C,CAMA;;;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpC7B,EAAAA,cAAc,EAAEM,QAAQ,IAAIuB,QAAQ,CAAC7B,cAAc,CAACM,QAAD,CAAf,CADA;AAEpCL,EAAAA,iBAAiB,EAAEyB,IAAI,IAAIG,QAAQ,CAAC5B,iBAAiB,CAACyB,IAAD,CAAlB;AAFC,CAAL,CAAnC;;AAKA,eAAe7B,OAAO,CAClB2B,eADkB,EAElBI,kBAFkB,CAAP,CAGbxB,iBAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Category from 'components/redux/Category';\r\nimport ApiService from \"ApiService\";\r\nimport { changeCategory } from '../store/modules/productStore';\r\nimport { changeProductList } from '../store/modules/productStore';\r\nimport categories from 'components/redux/categories';\r\nimport ProductList_Category from 'components/redux/ProductList_Category';\r\nclass CategoryContainer extends Component {\r\n    handleSelect = category => {\r\n        const { changeCategory } = this.props;\r\n        changeCategory(category);\r\n        const { changeProductList } = this.props;\r\n        const query = null;\r\n        const getProductList_Category = () => {\r\n\r\n            switch (category) {\r\n                case 'all':\r\n                    changeProductList(ProductList_Category.productList_All);\r\n                    break;\r\n                case 'notebook':\r\n                    changeProductList(ProductList_Category.productList_Notebook);\r\n                    break;\r\n                case 'mouse':\r\n                    changeProductList(ProductList_Category.productList_Mouse);\r\n                    break;\r\n                case 'skin':\r\n                    changeProductList(ProductList_Category.productList_Skin);\r\n                    break;\r\n                case 'lotions':\r\n                    changeProductList(ProductList_Category.productList_Lotions);\r\n                    console.log(\"test ->>>\", ApiService.fetchProduct()\r\n                        .then((res) => {\r\n                            this.setState({\r\n                                product: res.data,\r\n\r\n                            });\r\n                        }));\r\n                    break;\r\n            }\r\n        }\r\n        getProductList_Category();\r\n    };\r\n\r\n    render() {\r\n        const { category } = this.props;\r\n        // console.log(\">>>>>.\" + category)\r\n        return <Category onSelect={this.handleSelect} selected={category} />;\r\n\r\n    }\r\n\r\n}\r\n//props로 넣어줄 스토어의 상태값\r\nconst mapStateToProps = ({ productStore }) => ({\r\n    category: productStore.category,\r\n    list: productStore.productList,\r\n\r\n});\r\n\r\n//props로 넣어줄 액션 생성함수\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeCategory: category => dispatch(changeCategory(category)),\r\n    changeProductList: list => dispatch(changeProductList(list)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(CategoryContainer);"]},"metadata":{},"sourceType":"module"}