{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\container\\\\CategoryContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Category from 'components/redux/Category';\nimport { changeCategory } from '../store/modules/productStore';\n\nclass CategoryContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSelect = category => {\n      const {\n        changeCategory\n      } = this.props;\n      changeCategory(category);\n    };\n  }\n\n  render() {\n    const {\n      category\n    } = this.props;\n    console.log(\">>>>>.\" + category);\n    return /*#__PURE__*/React.createElement(Category, {\n      onSelect: this.handleSelect,\n      selected: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }\n    });\n  }\n\n} //props로 넣어줄 스토어의 상태값\n\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  category: productStore.category\n}); //props로 넣어줄 액션 생성함수\n\n\nconst mapDispatchToProps = dispatch => ({\n  changeCategory: category => dispatch(changeCategory(category))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryContainer);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/container/CategoryContainer.js"],"names":["React","Component","connect","Category","changeCategory","CategoryContainer","handleSelect","category","props","render","console","log","mapStateToProps","productStore","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,SAASC,cAAT,QAA+B,+BAA/B;;AAEA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SACtCK,YADsC,GACvBC,QAAQ,IAAI;AACvB,YAAM;AAAEH,QAAAA;AAAF,UAAqB,KAAKI,KAAhC;AACAJ,MAAAA,cAAc,CAACG,QAAD,CAAd;AACH,KAJqC;AAAA;;AAMtCE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWJ,QAAvB;AACA,wBAAO,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKD,YAAzB;AAAuC,MAAA,QAAQ,EAAEC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEH;;AAXqC,C,CAc1C;;;AACA,MAAMK,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAuB;AAC3CN,EAAAA,QAAQ,EAAEM,YAAY,CAACN;AADoB,CAAvB,CAAxB,C,CAKA;;;AACA,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AACpCX,EAAAA,cAAc,EAAEG,QAAQ,IAAIQ,QAAQ,CAACX,cAAc,CAACG,QAAD,CAAf;AADA,CAAL,CAAnC;;AAIA,eAAeL,OAAO,CAClBU,eADkB,EAElBE,kBAFkB,CAAP,CAGbT,iBAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Category from 'components/redux/Category';\r\n\r\nimport { changeCategory } from '../store/modules/productStore';\r\n\r\nclass CategoryContainer extends Component {\r\n    handleSelect = category => {\r\n        const { changeCategory } = this.props;\r\n        changeCategory(category);\r\n    };\r\n\r\n    render() {\r\n        const { category } = this.props;\r\n        console.log(\">>>>>.\" + category)\r\n        return <Category onSelect={this.handleSelect} selected={category} />;\r\n\r\n    }\r\n\r\n}\r\n//props로 넣어줄 스토어의 상태값\r\nconst mapStateToProps = ({ productStore }) => ({\r\n    category: productStore.category,\r\n\r\n});\r\n\r\n//props로 넣어줄 액션 생성함수\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeCategory: category => dispatch(changeCategory(category)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(CategoryContainer);"]},"metadata":{},"sourceType":"module"}