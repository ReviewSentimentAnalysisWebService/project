{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\components\\\\Review\\\\ReviewTable.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { connect } from 'react-redux';\nimport productStore from 'store/modules/productStore';\nimport mockData from './data';\nimport { Hidden } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 37\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 39\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 39\n    }\n  }))),\n  Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 40\n    }\n  }))),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 45\n    }\n  }))),\n  Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 38\n    }\n  }))),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 40\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 40\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 43\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 42\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 42\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 46\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 45\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 40\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 43\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 49\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 44\n    }\n  })))\n};\n\nconst ReviewTable = props => {\n  //columns는 고정이니까 그냥 둔다. \n  const titleString = props.CurrentKeyword;\n  const kewordReview = props.ReviewData;\n\n  const reviewClick = data => {\n    alert(data);\n  };\n\n  const dialog = text => {\n    const [open, setOpen] = React.useState(false);\n    const [scroll, setScroll] = React.useState('paper');\n\n    const handleClickOpen = scrollType => () => {\n      setOpen(true);\n      setScroll(scrollType);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const descriptionElementRef = React.useRef(null);\n    React.useEffect(() => {\n      if (open) {\n        const {\n          current: descriptionElement\n        } = descriptionElementRef;\n\n        if (descriptionElement !== null) {\n          descriptionElement.focus();\n        }\n      }\n    }, [open]);\n    return /*#__PURE__*/React.createElement(Dialog, {\n      open: open,\n      onClose: handleClose,\n      scroll: scroll,\n      \"aria-labelledby\": \"scroll-dialog-title\",\n      \"aria-describedby\": \"scroll-dialog-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"scroll-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Subscribe\"), /*#__PURE__*/React.createElement(DialogContent, {\n      dividers: scroll === 'paper',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      id: \"scroll-dialog-description\",\n      ref: descriptionElementRef,\n      tabIndex: -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Subscribe\")));\n  };\n\n  const test = (text, length) => {\n    if (length > 20) {\n      return text.substring(0, 20) + \"......\";\n    } else {\n      return text;\n    }\n  };\n\n  const [state, setState] = React.useState({\n    columns: [{\n      title: '작성자',\n      field: 'name'\n    }, {\n      title: '리뷰내용',\n      field: 'review',\n      render: rowData => /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          width: 200,\n          overflow: 'hidden'\n        },\n        onClick: () => reviewClick(rowData.review),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 66\n        }\n      }, test(rowData.review, rowData.review.length), \" \")\n    }, {\n      title: '올린시간',\n      field: 'time'\n    }]\n  }); //const kewordReview = mockData.keyword1_data;\n\n  console.log(\"data모양은\", props.ReviewData);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: titleString,\n    columns: state.columns,\n    data: kewordReview,\n    icons: tableIcons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  //2\n  ReviewData: productStore.ReviewData,\n  CurrentKeyword: productStore.CurrentKeyword\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect( // 스토어와 연결\nmapStateToProps, mapDispatchToProps)(ReviewTable);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/components/Review/ReviewTable.js"],"names":["React","MaterialTable","forwardRef","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","connect","productStore","mockData","Hidden","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","ReviewTable","titleString","CurrentKeyword","kewordReview","ReviewData","reviewClick","data","alert","dialog","text","open","setOpen","useState","scroll","setScroll","handleClickOpen","scrollType","handleClose","descriptionElementRef","useRef","useEffect","current","descriptionElement","focus","test","length","substring","state","setState","columns","title","field","render","rowData","width","overflow","review","console","log","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport { connect } from 'react-redux';\r\nimport productStore from 'store/modules/productStore';\r\nimport mockData from './data';\r\nimport { Hidden } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst ReviewTable = props => {\r\n    //columns는 고정이니까 그냥 둔다. \r\n    const titleString = props.CurrentKeyword;\r\n    const kewordReview = props.ReviewData;\r\n    const reviewClick = (data) => {\r\n        alert(data);\r\n    }\r\n\r\n\r\n    const dialog = (text) => {\r\n        const [open, setOpen] = React.useState(false);\r\n        const [scroll, setScroll] = React.useState('paper');\r\n\r\n        const handleClickOpen = (scrollType) => () => {\r\n            setOpen(true);\r\n            setScroll(scrollType);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setOpen(false);\r\n        };\r\n\r\n        const descriptionElementRef = React.useRef(null);\r\n        React.useEffect(() => {\r\n            if (open) {\r\n                const { current: descriptionElement } = descriptionElementRef;\r\n                if (descriptionElement !== null) {\r\n                    descriptionElement.focus();\r\n                }\r\n            }\r\n        }, [open]);\r\n\r\n        return <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            scroll={scroll}\r\n            aria-labelledby=\"scroll-dialog-title\"\r\n            aria-describedby=\"scroll-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\r\n            <DialogContent dividers={scroll === 'paper'}>\r\n                <DialogContentText\r\n                    id=\"scroll-dialog-description\"\r\n                    ref={descriptionElementRef}\r\n                    tabIndex={-1}\r\n                >\r\n\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Cancel\r\n          </Button>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Subscribe\r\n          </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    }\r\n\r\n    const test = (text, length) => {\r\n        if (length > 20) {\r\n            return text.substring(0, 20) + \"......\"\r\n        }\r\n        else {\r\n            return text\r\n        }\r\n    }\r\n    const [state, setState] = React.useState({\r\n        columns: [\r\n            { title: '작성자', field: 'name' },\r\n            { title: '리뷰내용', field: 'review', render: rowData => <p style={{ width: 200, overflow: 'hidden' }} onClick={() => reviewClick(rowData.review)}>{test(rowData.review, rowData.review.length)} </p> },\r\n            { title: '올린시간', field: 'time' },\r\n        ],\r\n    });\r\n\r\n    //const kewordReview = mockData.keyword1_data;\r\n    console.log(\"data모양은\", props.ReviewData);\r\n    return (\r\n        <>\r\n            <MaterialTable\r\n                title={titleString}\r\n                columns={state.columns}\r\n                data={kewordReview}\r\n                icons={tableIcons}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ productStore }) => ({  //2\r\n    ReviewData: productStore.ReviewData,\r\n    CurrentKeyword: productStore.CurrentKeyword,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\nexport default connect( // 스토어와 연결\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(ReviewTable);"]},"metadata":{},"sourceType":"module"}