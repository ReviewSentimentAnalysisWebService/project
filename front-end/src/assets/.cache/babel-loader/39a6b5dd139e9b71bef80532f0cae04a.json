{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\container\\\\CategoryContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Category from 'components/redux/Category';\nimport { changeCategory } from '../store/modules/productStore';\nimport { changeProductList } from '../store/modules/productStore';\nimport test from 'components/redux/test';\nimport ProductList_Category from 'components/redux/ProductList_Category';\n\nclass CategoryContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSelect = category => {\n      const {\n        changeCategory\n      } = this.props;\n      changeCategory(category);\n      console.log(\"categoryContainer's category value  \" + category);\n      const {\n        changeProductList\n      } = this.props; //changeProductList(test.productList);\n\n      const query = \"ProductList_Category.productList\";\n      changeProductList();\n    };\n  }\n\n  render() {\n    const {\n      category\n    } = this.props; // console.log(\">>>>>.\" + category)\n\n    return /*#__PURE__*/React.createElement(Category, {\n      onSelect: this.handleSelect,\n      selected: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    });\n  }\n\n} //props로 넣어줄 스토어의 상태값\n\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  category: productStore.category,\n  list: productStore.productList\n}); //props로 넣어줄 액션 생성함수\n\n\nconst mapDispatchToProps = dispatch => ({\n  changeCategory: category => dispatch(changeCategory(category)),\n  changeProductList: list => dispatch(changeProductList(list))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryContainer);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/container/CategoryContainer.js"],"names":["React","Component","connect","Category","changeCategory","changeProductList","test","ProductList_Category","CategoryContainer","handleSelect","category","props","console","log","query","render","mapStateToProps","productStore","list","productList","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,oBAAP,MAAiC,uCAAjC;;AACA,MAAMC,iBAAN,SAAgCP,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SACtCQ,YADsC,GACvBC,QAAQ,IAAI;AACvB,YAAM;AAAEN,QAAAA;AAAF,UAAqB,KAAKO,KAAhC;AACAP,MAAAA,cAAc,CAACM,QAAD,CAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAyCH,QAArD;AACA,YAAM;AAAEL,QAAAA;AAAF,UAAwB,KAAKM,KAAnC,CAJuB,CAKvB;;AACA,YAAMG,KAAK,GAAG,kCAAd;AACAT,MAAAA,iBAAiB;AAEpB,KAVqC;AAAA;;AAYtCU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEL,MAAAA;AAAF,QAAe,KAAKC,KAA1B,CADK,CAEL;;AACA,wBAAO,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKF,YAAzB;AAAuC,MAAA,QAAQ,EAAEC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEH;;AAjBqC,C,CAoB1C;;;AACA,MAAMM,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAuB;AAC3CP,EAAAA,QAAQ,EAAEO,YAAY,CAACP,QADoB;AAE3CQ,EAAAA,IAAI,EAAED,YAAY,CAACE;AAFwB,CAAvB,CAAxB,C,CAMA;;;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,cAAc,EAAEM,QAAQ,IAAIW,QAAQ,CAACjB,cAAc,CAACM,QAAD,CAAf,CADA;AAEpCL,EAAAA,iBAAiB,EAAEa,IAAI,IAAIG,QAAQ,CAAChB,iBAAiB,CAACa,IAAD,CAAlB;AAFC,CAAL,CAAnC;;AAKA,eAAehB,OAAO,CAClBc,eADkB,EAElBI,kBAFkB,CAAP,CAGbZ,iBAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Category from 'components/redux/Category';\r\n\r\nimport { changeCategory } from '../store/modules/productStore';\r\nimport { changeProductList } from '../store/modules/productStore';\r\nimport test from 'components/redux/test';\r\nimport ProductList_Category from 'components/redux/ProductList_Category';\r\nclass CategoryContainer extends Component {\r\n    handleSelect = category => {\r\n        const { changeCategory } = this.props;\r\n        changeCategory(category);\r\n        console.log(\"categoryContainer's category value  \" + category);\r\n        const { changeProductList } = this.props;\r\n        //changeProductList(test.productList);\r\n        const query = \"ProductList_Category.productList\";\r\n        changeProductList();\r\n\r\n    };\r\n\r\n    render() {\r\n        const { category } = this.props;\r\n        // console.log(\">>>>>.\" + category)\r\n        return <Category onSelect={this.handleSelect} selected={category} />;\r\n\r\n    }\r\n\r\n}\r\n//props로 넣어줄 스토어의 상태값\r\nconst mapStateToProps = ({ productStore }) => ({\r\n    category: productStore.category,\r\n    list: productStore.productList,\r\n\r\n});\r\n\r\n//props로 넣어줄 액션 생성함수\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeCategory: category => dispatch(changeCategory(category)),\r\n    changeProductList: list => dispatch(changeProductList(list)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(CategoryContainer);"]},"metadata":{},"sourceType":"module"}