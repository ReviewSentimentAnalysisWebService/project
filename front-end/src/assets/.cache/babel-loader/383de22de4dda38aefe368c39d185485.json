{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\view\\\\DetailPage\\\\Sections\\\\PieChart.js\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Card, CardHeader, CardContent, IconButton, Divider, Typography } from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\nimport productStore from 'store/modules/productStore';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst PieChart = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme(); // const data = {\n  //   datasets: [\n  //     {\n  //       data: [63, 15, 22, 25, 44, 65, 35, 12, 43, 40],\n  //       backgroundColor: [\n  //         theme.palette.primary.main,\n  //         theme.palette.error.main,\n  //         theme.palette.warning.main,\n  //         theme.palette.info.main,\n  //         theme.palette.secondary,\n  //         theme.palette.action.main,\n  //       ],\n  //       borderWidth: 8,\n  //       borderColor: theme.palette.white,\n  //       hoverBorderColor: theme.palette.white\n  //     }\n  //   ],\n  //   labels: [\n  //     'Desktop',\n  //     'Tablet',\n  //     'Mobile',\n  //     'test',\n  //     '123'\n  //   ],\n  // };\n\n  const getData = () => {};\n\n  const data = productStore.data;\n  console.log(\"fsfds\" + data);\n  const options = {\n    legend: {\n      display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n  const devices = [{\n    title: 'Desktop',\n    value: '63',\n    icon: /*#__PURE__*/React.createElement(LaptopMacIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }),\n    color: theme.palette.primary.main\n  }, {\n    title: 'Tablet',\n    value: '15',\n    icon: /*#__PURE__*/React.createElement(TabletMacIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }),\n    color: theme.palette.error.main\n  }, {\n    title: 'Mobile',\n    value: '23',\n    icon: /*#__PURE__*/React.createElement(PhoneIphoneIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }),\n    color: theme.palette.warning.main\n  }];\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(RefreshIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    })),\n    title: \"Users By Device\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, devices.map(device => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.device,\n    key: device.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, device.title), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: device.color\n    },\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, device.value, \"%\"))))));\n};\n\nPieChart.propTypes = {\n  className: PropTypes.string\n};\nexport default PieChart;","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/view/DetailPage/Sections/PieChart.js"],"names":["React","Doughnut","clsx","PropTypes","makeStyles","useTheme","Card","CardHeader","CardContent","IconButton","Divider","Typography","LaptopMacIcon","PhoneIphoneIcon","RefreshIcon","TabletMacIcon","productStore","useStyles","theme","root","height","chartContainer","position","stats","marginTop","spacing","display","justifyContent","device","textAlign","padding","deviceIcon","color","palette","icon","PieChart","props","className","rest","classes","getData","data","console","log","options","legend","responsive","maintainAspectRatio","animation","cutoutPercentage","layout","tooltips","enabled","mode","intersect","borderWidth","borderColor","divider","backgroundColor","white","titleFontColor","text","primary","bodyFontColor","secondary","footerFontColor","devices","title","value","main","error","warning","map","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\nimport productStore from 'store/modules/productStore';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  chartContainer: {\r\n    position: 'relative',\r\n    height: '300px'\r\n  },\r\n  stats: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  device: {\r\n    textAlign: 'center',\r\n    padding: theme.spacing(1)\r\n  },\r\n  deviceIcon: {\r\n    color: theme.palette.icon\r\n  }\r\n}));\r\n\r\nconst PieChart = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  // const data = {\r\n  //   datasets: [\r\n  //     {\r\n  //       data: [63, 15, 22, 25, 44, 65, 35, 12, 43, 40],\r\n  //       backgroundColor: [\r\n  //         theme.palette.primary.main,\r\n  //         theme.palette.error.main,\r\n  //         theme.palette.warning.main,\r\n  //         theme.palette.info.main,\r\n  //         theme.palette.secondary,\r\n  //         theme.palette.action.main,\r\n  //       ],\r\n  //       borderWidth: 8,\r\n  //       borderColor: theme.palette.white,\r\n  //       hoverBorderColor: theme.palette.white\r\n  //     }\r\n  //   ],\r\n  //   labels: [\r\n  //     'Desktop',\r\n  //     'Tablet',\r\n  //     'Mobile',\r\n  //     'test',\r\n  //     '123'\r\n  //   ],\r\n  // };\r\n  const getData = () => {\r\n\r\n  }\r\n  const data = productStore.data;\r\n  console.log(\"fsfds\" + data);\r\n  const options = {\r\n    legend: {\r\n      display: true\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      borderWidth: 1,\r\n      borderColor: theme.palette.divider,\r\n      backgroundColor: theme.palette.white,\r\n      titleFontColor: theme.palette.text.primary,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      footerFontColor: theme.palette.text.secondary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: '63',\r\n      icon: <LaptopMacIcon />,\r\n      color: theme.palette.primary.main\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: '15',\r\n      icon: <TabletMacIcon />,\r\n      color: theme.palette.error.main\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: '23',\r\n      icon: <PhoneIphoneIcon />,\r\n      color: theme.palette.warning.main\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        action={\r\n          <IconButton size=\"small\">\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"Users By Device\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className={classes.stats}>\r\n          {devices.map(device => (\r\n            <div\r\n              className={classes.device}\r\n              key={device.title}\r\n            >\r\n\r\n              <Typography variant=\"body1\">{device.title}</Typography>\r\n              <Typography\r\n                style={{ color: device.color }}\r\n                variant=\"h2\"\r\n              >\r\n                {device.value}%\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPieChart.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PieChart;\r\n"]},"metadata":{},"sourceType":"module"}