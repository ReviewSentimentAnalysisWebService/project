{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\components\\\\Card\\\\ProductCard.js\";\nimport React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport SmartphoneIcon from \"@material-ui/icons/Smartphone\";\nimport { Link } from 'react-router-dom'; //import productStore from 'store/modules/productStore';\n\nimport { connect } from 'react-redux';\nimport { changeCurrentKeyword, changeCurrentProduct, changeCategory } from 'store/modules/productStore';\nimport productStore from 'store/modules/productStore'; //import { handleClick } from 'container/ProductListContainer';\n//front-end\\src\\container\\ProductListContainer.js\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  margin: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst ProductCard = props => {\n  const classes = useStyles();\n  const bull = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bullet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }\n  }, \"\\u2022\"); //const { id, avatarSrc, title, subtitle, description, imgSrc, price, nv_mid } = props;\n\n  const {\n    cat_id,\n    name,\n    date,\n    img_url,\n    price,\n    nv_mid\n  } = props;\n  const productURL = \"https://search.shopping.naver.com/detail/detail.nhn?nvMid=\" + props.nv_mid; //세트인듯\n\n  const {\n    changeCurrentProduct,\n    changeCurrentKeyword\n  } = props;\n\n  const clickDetail = () => {\n    changeCurrentProduct(nv_mid);\n    changeCurrentKeyword(\"default keyword\"); //title로 이름이 바뀌면\n    //그에 맞는 키워드로 바뀌고\n    //그에 맞는 리뷰들로 바꿔어야 한다.\n    //console.log(\">>>>>>props.changeCurrentKeyword \" + props.CurrentKeyword);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    style: {\n      height: \"50px\"\n    },\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: img_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }),\n    title: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardMedia, {\n    style: {\n      height: \"300px\"\n    },\n    image: img_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"\\uC5EC\\uAE30\\uC5D0 \\uC5EC\\uB7EC\\uAC00\\uC9C0 \\uB0B4\\uC6A9\\uC744 \\uBCF4\\uC5EC\\uC904 \\uC608\\uC815\\uC785\\uB2C8\\uB2E4. \\uB4F1\\uB85D\\uB0A0\\uC9DC : \", data, price, \"\\uC6D0\")), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"medium\",\n    color: \"primary\",\n    className: classes.margin,\n    onClick: clickDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Detail\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"medium\",\n    color: \"primary\",\n    className: classes.margin,\n    href: productURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"BUY NOW\")));\n};\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  //2\n  category: productStore.category,\n  list: productStore.productList,\n  CurrentProduct: productStore.CurrentProduct,\n  CurrentKeyword: productStore.CurrentKeyword\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\n    changeCurrentKeyword: CurrentKeyword => dispatch(changeCurrentKeyword(CurrentKeyword))\n  };\n};\n\nexport default connect( // 스토어와 연결\nmapStateToProps, mapDispatchToProps)(ProductCard);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/components/Card/ProductCard.js"],"names":["React","Component","makeStyles","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","IconButton","Typography","red","Button","SmartphoneIcon","Link","connect","changeCurrentKeyword","changeCurrentProduct","changeCategory","productStore","useStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","margin","spacing","ProductCard","props","classes","bull","bullet","cat_id","name","date","img_url","price","nv_mid","productURL","clickDetail","data","mapStateToProps","category","list","productList","CurrentProduct","CurrentKeyword","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SmartphoneIcon from \"@material-ui/icons/Smartphone\";\r\nimport { Link } from 'react-router-dom';\r\n//import productStore from 'store/modules/productStore';\r\nimport { connect } from 'react-redux';\r\nimport { changeCurrentKeyword, changeCurrentProduct, changeCategory } from 'store/modules/productStore';\r\nimport productStore from 'store/modules/productStore';\r\n//import { handleClick } from 'container/ProductListContainer';\r\n//front-end\\src\\container\\ProductListContainer.js\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  margin: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ProductCard = (props) => {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  //const { id, avatarSrc, title, subtitle, description, imgSrc, price, nv_mid } = props;\r\n  const { cat_id, name, date, img_url, price, nv_mid } = props;\r\n  const productURL = \"https://search.shopping.naver.com/detail/detail.nhn?nvMid=\" + props.nv_mid;\r\n  //세트인듯\r\n  const { changeCurrentProduct, changeCurrentKeyword } = props;\r\n  const clickDetail = () => {\r\n    changeCurrentProduct(nv_mid);\r\n    changeCurrentKeyword(\"default keyword\");\r\n    //title로 이름이 바뀌면\r\n    //그에 맞는 키워드로 바뀌고\r\n    //그에 맞는 리뷰들로 바꿔어야 한다.\r\n\r\n    //console.log(\">>>>>>props.changeCurrentKeyword \" + props.CurrentKeyword);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        style={{ height: \"50px\" }}\r\n        avatar={<Avatar src={img_url} />}\r\n\r\n        title={name}\r\n\r\n      />\r\n      <CardMedia style={{ height: \"300px\" }} image={img_url} />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          여기에 여러가지 내용을 보여줄 예정입니다.\r\n          등록날짜 : {data}\r\n          {price}원\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Link to=\"/detail\">\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            className={classes.margin}\r\n            onClick={clickDetail}\r\n          >\r\n            Detail\r\n          </Button>\r\n        </Link>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          className={classes.margin}\r\n          href={productURL}\r\n        >\r\n          BUY NOW\r\n        </Button>\r\n\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ productStore }) => ({  //2\r\n  category: productStore.category,\r\n  list: productStore.productList,\r\n  CurrentProduct: productStore.CurrentProduct,\r\n  CurrentKeyword: productStore.CurrentKeyword,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\r\n    changeCurrentKeyword: CurrentKeyword => dispatch(changeCurrentKeyword(CurrentKeyword)),\r\n  }\r\n};\r\n\r\nexport default connect( // 스토어와 연결\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ProductCard);\r\n\r\n"]},"metadata":{},"sourceType":"module"}