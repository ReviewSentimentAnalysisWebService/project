{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\components\\\\Review\\\\SentimentalTable.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport DialogReview from './dialogReview';\nimport { connect } from 'react-redux';\nimport productStore from 'store/modules/productStore';\nimport mockData from './data';\nimport { red } from '@material-ui/core/colors';\nimport SentimentSatisfiedOutlinedIcon from '@material-ui/icons/SentimentSatisfiedOutlined';\nimport SentimentDissatisfiedOutlinedIcon from '@material-ui/icons/SentimentDissatisfiedOutlined';\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 37\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 39\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 39\n    }\n  }))),\n  Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 40\n    }\n  }))),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 45\n    }\n  }))),\n  Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 38\n    }\n  }))),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 40\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 40\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 43\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 42\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 42\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 46\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 45\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 40\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 43\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 49\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 44\n    }\n  })))\n};\n\nconst SentimentalTable = props => {\n  //columns는 고정이니까 그냥 둔다. \n  const titleString = 'SentimentalResult'; // const kewordReview = props.ReviewData;\n\n  const SentimentalData = props.SentimentalData;\n  const sortingField = \"senti_score\";\n  SentimentalData.sort(function (a, b) {\n    // 오름차순\n    return a[sortingField] - b[sortingField]; // 13, 21, 25, 44\n  });\n  console.log(\"table\", SentimentalData);\n\n  const viewIcons = (senti, quality) => {\n    if (quality > 0.5) {\n      return /*#__PURE__*/React.createElement(SentimentDissatisfiedOutlinedIcon, {\n        style: {\n          color: red[500]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(SentimentSatisfiedOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  const [state, setState] = React.useState({\n    columns: [{\n      title: '리뷰내용',\n      field: 'sentence',\n      render: rowData => /*#__PURE__*/React.createElement(DialogReview, {\n        data: rowData.sentence,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 68\n        }\n      })\n    }, {\n      title: '리뷰 감성',\n      field: 'senti_score'\n    }, {\n      title: '리뷰 퀄리티',\n      field: 'quality_score'\n    }, {\n      title: '분석결과',\n      field: 'result',\n      render: rowData => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 66\n        }\n      }, viewIcons(rowData.senti_score, rowData.quality_score), \" \")\n    }]\n  }); //const kewordReview = mockData.keyword1_data;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialTable, {\n    width: \"500px\",\n    height: \"800px\",\n    resize: \"none\",\n    title: titleString,\n    columns: state.columns,\n    data: SentimentalData,\n    icons: tableIcons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  //2\n  ReviewData: productStore.ReviewData,\n  CurrentKeyword: productStore.CurrentKeyword,\n  SentimentalData: productStore.SentimentalData\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect( // 스토어와 연결\nmapStateToProps, mapDispatchToProps)(SentimentalTable);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/components/Review/SentimentalTable.js"],"names":["React","MaterialTable","forwardRef","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","DialogReview","connect","productStore","mockData","red","SentimentSatisfiedOutlinedIcon","SentimentDissatisfiedOutlinedIcon","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","SentimentalTable","titleString","SentimentalData","sortingField","sort","a","b","console","log","viewIcons","senti","quality","color","state","setState","useState","columns","title","field","render","rowData","sentence","senti_score","quality_score","mapStateToProps","ReviewData","CurrentKeyword","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport DialogReview from './dialogReview';\r\nimport { connect } from 'react-redux';\r\nimport productStore from 'store/modules/productStore';\r\nimport mockData from './data';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nimport SentimentSatisfiedOutlinedIcon from '@material-ui/icons/SentimentSatisfiedOutlined';\r\nimport SentimentDissatisfiedOutlinedIcon from '@material-ui/icons/SentimentDissatisfiedOutlined';\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst SentimentalTable = props => {\r\n    //columns는 고정이니까 그냥 둔다. \r\n    const titleString = 'SentimentalResult';\r\n    // const kewordReview = props.ReviewData;\r\n    const SentimentalData = props.SentimentalData;\r\n    const sortingField = \"senti_score\";\r\n    SentimentalData.sort(function (a, b) { // 오름차순\r\n        return a[sortingField] - b[sortingField];\r\n        // 13, 21, 25, 44\r\n    });\r\n    console.log(\"table\", SentimentalData);\r\n    const viewIcons = (senti, quality) => {\r\n\r\n        if (quality > 0.5) {\r\n            return <SentimentDissatisfiedOutlinedIcon style={{ color: red[500] }} />\r\n        } else {\r\n            return <SentimentSatisfiedOutlinedIcon />;\r\n        }\r\n    }\r\n    const [state, setState] = React.useState({\r\n        columns: [\r\n            { title: '리뷰내용', field: 'sentence', render: rowData => <DialogReview data={rowData.sentence} /> },\r\n            { title: '리뷰 감성', field: 'senti_score' },\r\n            { title: '리뷰 퀄리티', field: 'quality_score' },\r\n            { title: '분석결과', field: 'result', render: rowData => <div>{(viewIcons(rowData.senti_score, rowData.quality_score))} </div> },\r\n\r\n        ],\r\n    });\r\n\r\n    //const kewordReview = mockData.keyword1_data;\r\n    return (\r\n        <>\r\n            <MaterialTable\r\n                width=\"500px\"\r\n                height=\"800px\"\r\n                resize=\"none\"\r\n\r\n                title={titleString}\r\n                columns={state.columns}\r\n                data={SentimentalData}\r\n                icons={tableIcons}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ productStore }) => ({  //2\r\n    ReviewData: productStore.ReviewData,\r\n    CurrentKeyword: productStore.CurrentKeyword,\r\n    SentimentalData: productStore.SentimentalData,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\nexport default connect( // 스토어와 연결\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(SentimentalTable);"]},"metadata":{},"sourceType":"module"}