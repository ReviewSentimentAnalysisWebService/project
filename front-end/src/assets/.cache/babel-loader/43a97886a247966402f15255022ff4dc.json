{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\container\\\\CategoryContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Category from 'components/redux/Category';\nimport ApiService from \"ApiService\";\nimport { changeCategory } from '../store/modules/productStore';\nimport { changeProductList } from '../store/modules/productStore';\nimport categories from 'components/redux/categories';\nimport ProductList_Category from 'components/redux/ProductList_Category';\nimport ProductTabs from 'components/redux/ProductTabs';\nimport axios from 'axios';\n\nclass CategoryContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSelect = category => {\n      const {\n        changeCategory\n      } = this.props;\n      changeCategory(category);\n      const {\n        changeProductList\n      } = this.props;\n      console.log(\"changeCategory -> ! \" + changeCategory);\n      this.state = {\n        product: []\n      };\n\n      const getProductList_Category = () => {\n        let product = [];\n\n        switch (category) {\n          case 'all':\n            changeProductList(ProductList_Category.productList_All);\n            break;\n\n          case 'notebook':\n            changeProductList(ProductList_Category.productList_Notebook);\n            break;\n\n          case 'mouse':\n            changeProductList(ProductList_Category.productList_Mouse);\n            break;\n\n          case 'skin':\n            changeProductList(ProductList_Category.productList_Skin);\n            break;\n\n          case 'lotions':\n            changeProductList(ProductList_Category.productList_Lotions);\n            console.log(\"test ->>>\", axios.get(\"http://localhost:8080/products\").then(response => this.setState({\n              product: response.data\n            }))); //ㅠㅅㅠ\n\n            break;\n        }\n      };\n\n      getProductList_Category();\n    };\n  }\n\n  render() {\n    const {\n      category\n    } = this.props; // console.log(\">>>>>.\" + category)\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Category, {\n      onSelect: this.handleSelect,\n      selected: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ProductTabs, {\n      onSelect: this.handleSelect,\n      selected: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }));\n  }\n\n} //props로 넣어줄 스토어의 상태값\n\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  category: productStore.category,\n  list: productStore.productList\n}); //props로 넣어줄 액션 생성함수\n\n\nconst mapDispatchToProps = dispatch => ({\n  changeCategory: category => dispatch(changeCategory(category)),\n  changeProductList: list => dispatch(changeProductList(list))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryContainer);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/container/CategoryContainer.js"],"names":["React","Component","connect","Category","ApiService","changeCategory","changeProductList","categories","ProductList_Category","ProductTabs","axios","CategoryContainer","handleSelect","category","props","console","log","state","product","getProductList_Category","productList_All","productList_Notebook","productList_Mouse","productList_Skin","productList_Lotions","get","then","response","setState","data","render","mapStateToProps","productStore","list","productList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Category from 'components/redux/Category';\r\nimport ApiService from \"ApiService\";\r\nimport { changeCategory } from '../store/modules/productStore';\r\nimport { changeProductList } from '../store/modules/productStore';\r\nimport categories from 'components/redux/categories';\r\nimport ProductList_Category from 'components/redux/ProductList_Category';\r\nimport ProductTabs from 'components/redux/ProductTabs';\r\nimport axios from 'axios';\r\nclass CategoryContainer extends Component {\r\n\r\n    handleSelect = category => {\r\n        const { changeCategory } = this.props;\r\n        changeCategory(category);\r\n        const { changeProductList } = this.props;\r\n        console.log(\"changeCategory -> ! \" + changeCategory);\r\n        this.state = {\r\n            product: []\r\n        };\r\n        const getProductList_Category = () => {\r\n            let product = [];\r\n            switch (category) {\r\n                case 'all':\r\n                    changeProductList(ProductList_Category.productList_All);\r\n                    break;\r\n                case 'notebook':\r\n                    changeProductList(ProductList_Category.productList_Notebook);\r\n                    break;\r\n                case 'mouse':\r\n                    changeProductList(ProductList_Category.productList_Mouse);\r\n                    break;\r\n                case 'skin':\r\n                    changeProductList(ProductList_Category.productList_Skin);\r\n                    break;\r\n                case 'lotions':\r\n                    changeProductList(ProductList_Category.productList_Lotions);\r\n                    console.log(\"test ->>>\", axios.get(\"http://localhost:8080/products\").then((response) => this.setState({\r\n                        product: response.data,\r\n                    })));\r\n\r\n                    //ㅠㅅㅠ\r\n                    break;\r\n            }\r\n        }\r\n        getProductList_Category();\r\n    };\r\n\r\n    render() {\r\n        const { category } = this.props;\r\n        // console.log(\">>>>>.\" + category)\r\n        return (<>\r\n            <Category onSelect={this.handleSelect} selected={category} />\r\n            <ProductTabs onSelect={this.handleSelect} selected={category} />\r\n        </>);\r\n\r\n    }\r\n\r\n}\r\n//props로 넣어줄 스토어의 상태값\r\nconst mapStateToProps = ({ productStore }) => ({\r\n    category: productStore.category,\r\n    list: productStore.productList,\r\n\r\n});\r\n\r\n//props로 넣어줄 액션 생성함수\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeCategory: category => dispatch(changeCategory(category)),\r\n    changeProductList: list => dispatch(changeProductList(list)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(CategoryContainer);"]},"metadata":{},"sourceType":"module"}