{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\components\\\\Review\\\\dialogReview.js\";\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Highlighter from \"react-highlight-words\";\nimport { connect } from 'react-redux'; //import productStore from 'store/modules/productStore';\n\nfunction AlertDialog(props) {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const cutString = (text, length) => {\n    if (length > 30) {\n      return text.substring(0, 30) + \".....\";\n    } else {\n      return text;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, cutString(props.data + \"                                                    \", props.data.length)), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    style: {\n      cursor: 'move'\n    },\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Full review\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Highlighter, {\n    searchWords: [props.CurrentKeyword, props.SearchTextField],\n    autoEscape: true,\n    textToHighlight: props.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Ok\"))));\n}\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  //2\n  CurrentKeyword: productStore.CurrentKeyword,\n  SearchTextField: productStore.SearchTextField\n}); //import store name이 맞는거다\n//props로 넣어줄 액션 생성함수\n\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect( // 스토어와 연결\nmapStateToProps, mapDispatchToProps)(AlertDialog);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/components/Review/dialogReview.js"],"names":["React","useState","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Highlighter","connect","AlertDialog","props","open","setOpen","handleClickOpen","handleClose","cutString","text","length","substring","data","cursor","CurrentKeyword","SearchTextField","mapStateToProps","productStore","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { connect } from 'react-redux';\r\n//import productStore from 'store/modules/productStore';\r\nfunction AlertDialog(props) {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const cutString = (text, length) => {\r\n        if (length > 30) {\r\n            return text.substring(0, 30) + \".....\"\r\n        }\r\n        else {\r\n            return text\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button color=\"primary\" onClick={handleClickOpen}>\r\n                {cutString(props.data + \"                                                    \", props.data.length)}\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"alert-dialog-title\">{\"Full review\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Highlighter\r\n                            searchWords={[props.CurrentKeyword, props.SearchTextField]}\r\n                            autoEscape={true}\r\n                            textToHighlight={props.data}>\r\n\r\n                        </Highlighter>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Ok\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ productStore }) => ({  //2\r\n    CurrentKeyword: productStore.CurrentKeyword,\r\n    SearchTextField: productStore.SearchTextField,\r\n});\r\n//import store name이 맞는거다\r\n\r\n//props로 넣어줄 액션 생성함수\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n});\r\n\r\nexport default connect( // 스토어와 연결\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(AlertDialog);"]},"metadata":{},"sourceType":"module"}