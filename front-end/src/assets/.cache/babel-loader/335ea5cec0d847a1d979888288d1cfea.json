{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\container\\\\CategoryContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeCategory } from '../store/modules/productStore';\nimport { changeProductList } from '../store/modules/productStore';\nimport { changeCategoryList } from '../store/modules/productStore';\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\nimport ApiService from \"ApiService\";\n\nclass CategoryContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadCategoryList = () => {\n      ApiService.fetchCategory().then(res => {\n        this.setState({\n          categoryList: res.data\n        });\n        const {\n          changeCategoryList\n        } = this.props;\n        changeCategoryList(this.state.categoryList);\n        console.log(\"실행순서 확인\");\n        console.log(\"categoryList\", this.props.categoryList);\n      }).catch(err => {\n        console.log(\"reload error\", err);\n      });\n    };\n\n    this.reloadProductList = () => {\n      ApiService.fetchProductList().then(res => {\n        this.setState({\n          productList: res.data\n        });\n        const {\n          changeProductList\n        } = this.props;\n        changeProductList(this.state.productList);\n        console.log(\"여긴언제\");\n      }).catch(err => {\n        console.log(\"reload error\", err);\n      });\n    };\n\n    this.reloadProductListById = cat_id => {\n      ApiService.fetchProductListById(cat_id).then(res => {\n        this.setState({\n          productList: res.data\n        });\n        const {\n          changeProductList\n        } = this.props;\n        changeProductList(this.state.productList);\n      }).catch(err => {\n        console.log(\"reload error\", err);\n      });\n    };\n\n    this.handleSelect = category => {\n      const {\n        changeCategory\n      } = this.props;\n      changeCategory(category); //바꾸는 부분 \n\n      const {\n        changeProductList\n      } = this.props;\n      console.log(\"changeCategory -> ! \" + category);\n      this.state = {\n        product: []\n      };\n\n      const getProductList_Category = () => {\n        // const cat_id;\n        switch (category) {\n          case 'all':\n            this.reloadProductList();\n            break;\n\n          case 'notebook':\n            // cat_id = 50000151 노트북\n            // ApiService.fetchProductListById(cat_id);\n            this.reloadProductListById(50000151);\n            break;\n          //cat_id 50000151\n\n          case 'mouse':\n            //cat_id = 50001203 마우스 \n            //changeProductList(ProductList_Category.productList_Mouse);\n            this.reloadProductListById(50001203);\n            break;\n\n          case 'skin':\n            //cat_id = 50000437 스킨\n            this.reloadProductListById(50000437);\n            break;\n\n          case 'lotions':\n            //cat_id = 50000438 로션\n            this.reloadProductListById(50000438);\n            break;\n        }\n      };\n\n      getProductList_Category();\n    };\n\n    this.state = {\n      categoryList: [],\n      productList: []\n    };\n  }\n\n  componentWillMount() {\n    this.reloadCategoryList();\n    this.reloadProductList();\n  } //생성되자마자 -> 한번만 \n\n\n  render() {\n    const {\n      category\n    } = this.props;\n    const {\n      categoryList\n    } = this.props; // console.log(\">>>>>.\" + category)\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(CustomTabs, {\n      onSelect: this.handleSelect,\n      selected: category,\n      categoryList: this.state.categoryList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }));\n  }\n\n} //props로 넣어줄 스토어의 상태값\n\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  category: productStore.category,\n  list: productStore.productList,\n  CategoryList: productStore.CategoryList\n}); //props로 넣어줄 액션 생성함수\n\n\nconst mapDispatchToProps = dispatch => ({\n  changeCategory: category => dispatch(changeCategory(category)),\n  changeProductList: list => dispatch(changeProductList(list)),\n  changeCategoryList: CategoryList => dispatch(changeCategoryList(CategoryList))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryContainer);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/container/CategoryContainer.js"],"names":["React","Component","connect","changeCategory","changeProductList","changeCategoryList","CustomTabs","ApiService","CategoryContainer","constructor","props","reloadCategoryList","fetchCategory","then","res","setState","categoryList","data","state","console","log","catch","err","reloadProductList","fetchProductList","productList","reloadProductListById","cat_id","fetchProductListById","handleSelect","category","product","getProductList_Category","componentWillMount","render","mapStateToProps","productStore","list","CategoryList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeCategory } from '../store/modules/productStore';\r\nimport { changeProductList } from '../store/modules/productStore';\r\nimport { changeCategoryList } from '../store/modules/productStore';\r\nimport CustomTabs from \"components/CustomTabs/CustomTabs.js\";\r\nimport ApiService from \"ApiService\";\r\n\r\n\r\nclass CategoryContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categoryList: [],\r\n            productList: [],\r\n\r\n        };\r\n    }\r\n    componentWillMount() {\r\n        this.reloadCategoryList();\r\n        this.reloadProductList();\r\n    }\r\n    //생성되자마자 -> 한번만 \r\n    reloadCategoryList = () => {\r\n        ApiService.fetchCategory()\r\n            .then((res) => {\r\n                this.setState({\r\n                    categoryList: res.data,\r\n                });\r\n                const { changeCategoryList } = this.props;\r\n                changeCategoryList(this.state.categoryList);\r\n                console.log(\"실행순서 확인\");\r\n                console.log(\"categoryList\", this.props.categoryList);\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"reload error\", err);\r\n            });\r\n    };\r\n    //생성되자마자 -> 한번만 \r\n    reloadProductList = () => {\r\n        ApiService.fetchProductList()\r\n            .then((res) => {\r\n                this.setState({\r\n                    productList: res.data,\r\n                });\r\n                const { changeProductList } = this.props;\r\n                changeProductList(this.state.productList);\r\n                console.log(\"여긴언제\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"reload error\", err);\r\n            });\r\n    };\r\n\r\n\r\n    reloadProductListById = (cat_id) => {\r\n        ApiService.fetchProductListById(cat_id)\r\n            .then((res) => {\r\n                this.setState({\r\n                    productList: res.data,\r\n                });\r\n                const { changeProductList } = this.props;\r\n                changeProductList(this.state.productList);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"reload error\", err);\r\n            });\r\n    };\r\n\r\n\r\n\r\n    handleSelect = category => {\r\n        const { changeCategory } = this.props;\r\n        changeCategory(category);\r\n\r\n        //바꾸는 부분 \r\n        const { changeProductList } = this.props;\r\n        console.log(\"changeCategory -> ! \" + category);\r\n        this.state = {\r\n            product: []\r\n        };\r\n        const getProductList_Category = () => {\r\n            // const cat_id;\r\n            switch (category) {\r\n                case 'all':\r\n                    this.reloadProductList();\r\n                    break;\r\n                case 'notebook':\r\n                    // cat_id = 50000151 노트북\r\n                    // ApiService.fetchProductListById(cat_id);\r\n                    this.reloadProductListById(50000151);\r\n                    break;\r\n                //cat_id 50000151\r\n                case 'mouse':\r\n                    //cat_id = 50001203 마우스 \r\n                    //changeProductList(ProductList_Category.productList_Mouse);\r\n                    this.reloadProductListById(50001203);\r\n                    break;\r\n                case 'skin':\r\n                    //cat_id = 50000437 스킨\r\n                    this.reloadProductListById(50000437);\r\n                    break;\r\n                case 'lotions':\r\n                    //cat_id = 50000438 로션\r\n                    this.reloadProductListById(50000438);\r\n                    break;\r\n            }\r\n        }\r\n        getProductList_Category();\r\n    };\r\n    render() {\r\n        const { category } = this.props;\r\n        const { categoryList } = this.props;\r\n        // console.log(\">>>>>.\" + category)\r\n        return (<>\r\n            <br></br><br></br>\r\n\r\n            <CustomTabs\r\n                onSelect={this.handleSelect} selected={category} categoryList={this.state.categoryList}\r\n            />\r\n        </>);\r\n\r\n    }\r\n\r\n}\r\n//props로 넣어줄 스토어의 상태값\r\nconst mapStateToProps = ({ productStore }) => ({\r\n    category: productStore.category,\r\n    list: productStore.productList,\r\n    CategoryList: productStore.CategoryList,\r\n});\r\n\r\n//props로 넣어줄 액션 생성함수\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeCategory: category => dispatch(changeCategory(category)),\r\n    changeProductList: list => dispatch(changeProductList(list)),\r\n    changeCategoryList: CategoryList => dispatch(changeCategoryList(CategoryList)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(CategoryContainer);"]},"metadata":{},"sourceType":"module"}