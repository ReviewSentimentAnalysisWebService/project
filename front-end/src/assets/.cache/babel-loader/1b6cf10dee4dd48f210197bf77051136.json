{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\components\\\\redux\\\\Category.js\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport categories from './categories';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab'; //카테고리 리스트를 받아와서 출력한다\n//onclick된거로 값이 바뀐다.\n//productList가 onclick된 카테고리로 바뀌려면?\n//카테고리 값마다 불러오는 productList가 달라야 한다?\n//그렇다면 productList_Category에 각 값마다 달라져야하는 데이터를 json형식으로 저장해두고\n//카테고리가 변화하면 안에 list도 그 변화를 감지하고 바뀌어야 한다.\n//와우\n\nimport styles from \"assets/jss/material-kit-react/views/componentsSections/tabsStyle.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst CategoriesBlock = ({\n  selected,\n  onSelect,\n  categories\n}) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, categories.map(category => /*#__PURE__*/React.createElement(Tab, {\n    label: category,\n    category: category,\n    activeClassName: \"active\",\n    active: selected === category,\n    onClick: () => onSelect(category),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })))));\n}; //\n\n\nconst Category = ({\n  selected,\n  onSelect\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(CategoriesBlock, {\n    selected: selected,\n    onSelect: onSelect,\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Category;","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/components/redux/Category.js"],"names":["React","styled","categories","Paper","Tabs","Tab","styles","makeStyles","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","CategoriesBlock","selected","onSelect","classes","value","setValue","useState","handleChange","event","newValue","map","category","Category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,qEAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,eAAe,EAAEH,KAAK,CAACI,OAAN,CAAcC,UAAd,CAAyBC;AAFtC;AADiC,CAAZ,CAAD,CAA5B;;AAOA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBhB,EAAAA;AAAtB,CAAD,KAAwC;AAC9D,QAAMiB,OAAO,GAAGX,SAAS,EAAzB;AAEA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBrB,KAAK,CAACsB,QAAN,CAAe,CAAf,CAA1B;;AAEA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCJ,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAFD;;AAIA,sBACE,uDACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEN,OAAO,CAACT,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEU,KADT;AAEE,IAAA,QAAQ,EAAEG,YAFZ;AAGE,IAAA,cAAc,EAAC,SAHjB;AAIE,IAAA,SAAS,EAAC,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGrB,UAAU,CAACwB,GAAX,CAAeC,QAAQ,iBACtB,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEA,QAAZ;AACE,IAAA,QAAQ,EAAEA,QADZ;AAEE,IAAA,eAAe,EAAC,QAFlB;AAGE,IAAA,MAAM,EAAEV,QAAQ,KAAKU,QAHvB;AAIE,IAAA,OAAO,EAAE,MAAMT,QAAQ,CAACS,QAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CANH,CADF,CADF,CADF;AAqBD,CA9BD,C,CA+BA;;;AAKA,MAAMC,QAAQ,GAAG,CAAC;AAAEX,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AAC3C,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,eAEE,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAED,QAA3B;AAAqC,IAAA,QAAQ,EAAEC,QAA/C;AAAyD,IAAA,UAAU,EAAEhB,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD,CARD;;AAUA,eAAe0B,QAAf","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport categories from './categories';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n//카테고리 리스트를 받아와서 출력한다\r\n//onclick된거로 값이 바뀐다.\r\n//productList가 onclick된 카테고리로 바뀌려면?\r\n//카테고리 값마다 불러오는 productList가 달라야 한다?\r\n//그렇다면 productList_Category에 각 값마다 달라져야하는 데이터를 json형식으로 저장해두고\r\n//카테고리가 변화하면 안에 list도 그 변화를 감지하고 바뀌어야 한다.\r\n//와우\r\nimport styles from \"assets/jss/material-kit-react/views/componentsSections/tabsStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst CategoriesBlock = ({ selected, onSelect, categories }) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          {categories.map(category => (\r\n            <Tab label={category}\r\n              category={category}\r\n              activeClassName=\"active\"\r\n              active={selected === category}\r\n              onClick={() => onSelect(category)}\r\n            />\r\n          ))}\r\n        </Tabs>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n//\r\n\r\n\r\n\r\n\r\nconst Category = ({ selected, onSelect }) => {\r\n  return (\r\n    <>\r\n      <br></br><br></br>\r\n      <CategoriesBlock selected={selected} onSelect={onSelect} categories={categories} />\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}