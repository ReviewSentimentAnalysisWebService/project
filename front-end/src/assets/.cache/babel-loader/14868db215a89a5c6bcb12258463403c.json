{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\view\\\\DetailPage\\\\Sections\\\\RadarChart.js\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Card, CardHeader, CardContent, IconButton, Divider, Typography } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from 'react-redux';\nimport productStore from 'store/modules/productStore';\nimport { changeCurrentKeyword, changeCurrentProduct, changeReview } from 'store/modules/productStore';\nimport testData from './data';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst RadarChart = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme(); //console.log(\"labeldata    -> \" + props.graphData.labels);\n  // console.log(\"graphData    -> \" + JSON.stringify(props.graphData));\n  // console.log(\"currentProduct    -> \" + props.CurrentProduct);\n\n  let titleString = props.CurrentProduct + \"'s Keyword\";\n  const data = {\n    datasets: [{\n      data: props.reviewNumber,\n      // store에서 가져온 값 이걸 바꾸면 차트도 바뀌어야 됨 !!!!!!!!!!!!!!\n      backgroundColor: ['#e53935', '#8e24aa', '#9fa8da', '#b2dfdb', '#80cbc4', '#e6ee9c', '#ffcc80', '#fff59d', '#90a4ae'],\n      borderWidth: 8,\n      borderColor: theme.palette.white,\n      hoverBorderColor: theme.palette.white\n    }],\n    labels: props.reviewLabels // 보여주는 라벨들\n\n  };\n  const options = {\n    legend: {\n      display: true\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n  const {\n    changeCurrentKeyword,\n    changeReview\n  } = props;\n  const keywords = props.reviewLabels; // click 이벤트로 처리되는 label들을 지정해둔 곳  \n\n  const test = testData;\n\n  const keywordClick = keyword => {\n    changeCurrentKeyword(keyword);\n\n    switch (keyword) {\n      case \"keyword1\":\n        changeReview(test.keyword1);\n        break;\n\n      case \"keyword2\":\n        changeReview(test.keyword2);\n        break;\n\n      case \"keyword3\":\n        changeReview(test.keyword3);\n        break;\n    }\n\n    console.log(\"changeCurrentKeyword\", props.CurrentKeyword); //키워드가 바뀌는 곳에서 리뷰도 바뀌어야 된다.\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RefreshIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    })),\n    title: titleString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 22\n    }\n  }, \"Click Keyword \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, keywords.map(keyword => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    fullWidth: \"true\",\n    color: \"primary\",\n    onClick: () => keywordClick(keyword),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, keyword)))))));\n};\n\nRadarChart.propTypes = {\n  className: PropTypes.string\n};\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  //2\n  CurrentProduct: productStore.CurrentProduct,\n  CurrentKeyword: productStore.CurrentKeyword,\n  reviewNumber: productStore.reviewNumber,\n  reviewLabels: productStore.reviewLabels,\n  ReviewData: productStore.ReviewData\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\n    changeCurrentKeyword: CurrentKeyword => dispatch(changeCurrentKeyword(CurrentKeyword)),\n    changeReview: ReviewData => dispatch(changeReview(ReviewData))\n  };\n};\n\nexport default connect( // 스토어와 연결\nmapStateToProps, mapDispatchToProps)(RadarChart);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/view/DetailPage/Sections/RadarChart.js"],"names":["React","Doughnut","clsx","PropTypes","makeStyles","useTheme","Button","Card","CardHeader","CardContent","IconButton","Divider","Typography","RefreshIcon","Grid","connect","productStore","changeCurrentKeyword","changeCurrentProduct","changeReview","testData","useStyles","theme","root","height","chartContainer","position","stats","marginTop","spacing","display","justifyContent","device","textAlign","padding","deviceIcon","color","palette","icon","RadarChart","props","className","rest","classes","titleString","CurrentProduct","data","datasets","reviewNumber","backgroundColor","borderWidth","borderColor","white","hoverBorderColor","labels","reviewLabels","options","legend","responsive","maintainAspectRatio","animation","cutoutPercentage","layout","tooltips","enabled","mode","intersect","divider","titleFontColor","text","primary","bodyFontColor","secondary","footerFontColor","keywords","test","keywordClick","keyword","keyword1","keyword2","keyword3","console","log","CurrentKeyword","map","propTypes","string","mapStateToProps","ReviewData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    IconButton,\r\n    Divider,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { connect } from 'react-redux';\r\nimport productStore from 'store/modules/productStore';\r\nimport { changeCurrentKeyword, changeCurrentProduct, changeReview } from 'store/modules/productStore';\r\nimport testData from './data';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100%'\r\n    },\r\n    chartContainer: {\r\n        position: 'relative',\r\n        height: '300px'\r\n    },\r\n    stats: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    device: {\r\n        textAlign: 'center',\r\n        padding: theme.spacing(1)\r\n    },\r\n    deviceIcon: {\r\n        color: theme.palette.icon\r\n    }\r\n}));\r\n\r\nconst RadarChart = props => {\r\n    const { className, ...rest } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n\r\n    //console.log(\"labeldata    -> \" + props.graphData.labels);\r\n    // console.log(\"graphData    -> \" + JSON.stringify(props.graphData));\r\n    // console.log(\"currentProduct    -> \" + props.CurrentProduct);\r\n\r\n    let titleString = props.CurrentProduct + \"'s Keyword\";\r\n\r\n    const data = {\r\n        datasets: [\r\n            {\r\n                data: props.reviewNumber, // store에서 가져온 값 이걸 바꾸면 차트도 바뀌어야 됨 !!!!!!!!!!!!!!\r\n                backgroundColor: ['#e53935', '#8e24aa', '#9fa8da', '#b2dfdb', '#80cbc4', '#e6ee9c', '#ffcc80', '#fff59d', '#90a4ae'],\r\n                borderWidth: 8,\r\n                borderColor: theme.palette.white,\r\n                hoverBorderColor: theme.palette.white\r\n            }\r\n        ],\r\n        labels: props.reviewLabels // 보여주는 라벨들\r\n    };\r\n\r\n    const options = {\r\n        legend: {\r\n            display: true\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        animation: false,\r\n        cutoutPercentage: 80,\r\n        layout: { padding: 0 },\r\n\r\n        tooltips: {\r\n            enabled: true,\r\n            mode: 'index',\r\n            intersect: false,\r\n            borderWidth: 1,\r\n            borderColor: theme.palette.divider,\r\n            backgroundColor: theme.palette.white,\r\n            titleFontColor: theme.palette.text.primary,\r\n            bodyFontColor: theme.palette.text.secondary,\r\n            footerFontColor: theme.palette.text.secondary\r\n        },\r\n\r\n    };\r\n    const { changeCurrentKeyword, changeReview } = props;\r\n    const keywords = props.reviewLabels;\r\n    // click 이벤트로 처리되는 label들을 지정해둔 곳  \r\n    const test = testData;\r\n    const keywordClick = (keyword) => {\r\n        changeCurrentKeyword(keyword);\r\n        switch (keyword) {\r\n            case \"keyword1\":\r\n                changeReview(test.keyword1);\r\n                break;\r\n            case \"keyword2\":\r\n                changeReview(test.keyword2);\r\n                break;\r\n            case \"keyword3\":\r\n                changeReview(test.keyword3);\r\n                break;\r\n        }\r\n\r\n        console.log(\"changeCurrentKeyword\", props.CurrentKeyword);\r\n        //키워드가 바뀌는 곳에서 리뷰도 바뀌어야 된다.\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n            <CardHeader\r\n                action={\r\n                    <IconButton size=\"small\">\r\n                        <RefreshIcon />\r\n                    </IconButton>\r\n                }\r\n                title={titleString}\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n                <div className={classes.chartContainer}>\r\n                    <Doughnut\r\n                        data={data}\r\n                        options={options}\r\n\r\n                    />\r\n                </div>\r\n                <div><p>Click Keyword </p></div>\r\n                <div className={classes.stats}>\r\n                    <Grid container spacing={1}>\r\n                        {keywords.map(keyword => (\r\n                            <Grid item xs={12} sm={3}>\r\n                                <Button variant=\"outlined\" fullWidth='true' color=\"primary\" onClick={() => keywordClick(keyword)} >{keyword}</Button>\r\n                            </Grid>\r\n\r\n                        ))}\r\n                    </Grid>\r\n                </div>\r\n\r\n                {/* <div><p>Click Keyword </p></div>\r\n        <div className={classes.stats}>\r\n\r\n          <Grid container spacing={1}>\r\n            {devices.map(device => (\r\n              <Grid item xs={12} sm={3}>\r\n                <Button variant=\"outlined\" fullWidth='true' color=\"primary\" onClick={() => keywordClick(device.title)} >{device.title}</Button>\r\n              </Grid>\r\n\r\n            ))}\r\n          </Grid>\r\n        </div> */}\r\n\r\n            </CardContent>\r\n        </Card >\r\n    );\r\n};\r\n\r\nRadarChart.propTypes = {\r\n    className: PropTypes.string\r\n};\r\nconst mapStateToProps = ({ productStore }) => ({  //2\r\n    CurrentProduct: productStore.CurrentProduct,\r\n    CurrentKeyword: productStore.CurrentKeyword,\r\n    reviewNumber: productStore.reviewNumber,\r\n    reviewLabels: productStore.reviewLabels,\r\n    ReviewData: productStore.ReviewData,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\r\n        changeCurrentKeyword: CurrentKeyword => dispatch(changeCurrentKeyword(CurrentKeyword)),\r\n        changeReview: ReviewData => dispatch(changeReview(ReviewData)),\r\n    }\r\n};\r\n\r\nexport default connect( // 스토어와 연결\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(RadarChart);\r\n\r\n"]},"metadata":{},"sourceType":"module"}