{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\components\\\\Review\\\\ReivewList.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport productStore from 'store/modules/productStore';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActions, CardHeader, CardContent, Button, Divider, Table, TableBody, TableCell, TableHead, TableRow, Tooltip, TableSortLabel } from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport ReviewTable from './ReviewTable';\nimport mockData from './data'; //import { StatusBullet } from 'StatusBullet';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1000\n  },\n  statusContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  status: {\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\nconst statusColors = {\n  delivered: 'success',\n  pending: 'info',\n  refunded: 'danger'\n};\n\nconst ReviewList = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [reviews] = useState(mockData);\n  const selectKeyword = props.CurrentKeyword;\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"\",\n    title: selectKeyword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReviewTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n};\n\nReviewList.propTypes = {\n  className: PropTypes.string\n};\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  //2\n  CurrentKeyword: productStore.CurrentKeyword\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect( // 스토어와 연결\nmapStateToProps, mapDispatchToProps)(ReviewList);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/components/Review/ReivewList.js"],"names":["React","useState","clsx","connect","productStore","PerfectScrollbar","PropTypes","makeStyles","Card","CardActions","CardHeader","CardContent","Button","Divider","Table","TableBody","TableCell","TableHead","TableRow","Tooltip","TableSortLabel","ArrowRightIcon","ReviewTable","mockData","useStyles","theme","root","content","padding","inner","minWidth","statusContainer","display","alignItems","status","marginRight","spacing","actions","justifyContent","statusColors","delivered","pending","refunded","ReviewList","props","className","rest","classes","reviews","selectKeyword","CurrentKeyword","propTypes","string","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport productStore from 'store/modules/productStore';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  TableSortLabel\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport ReviewTable from './ReviewTable';\nimport mockData from './data';\n//import { StatusBullet } from 'StatusBullet';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1000\n  },\n  statusContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  status: {\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst statusColors = {\n  delivered: 'success',\n  pending: 'info',\n  refunded: 'danger'\n};\n\nconst ReviewList = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [reviews] = useState(mockData);\n  const selectKeyword = props.CurrentKeyword;\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        color=\"\"\n        title={selectKeyword}\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n      </CardContent>\n      <ReviewTable />\n      <Divider />\n    </Card>\n  );\n};\n\nReviewList.propTypes = {\n  className: PropTypes.string\n};\n\nconst mapStateToProps = ({ productStore }) => ({  //2\n\n  CurrentKeyword: productStore.CurrentKeyword,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n\n  }\n};\n\nexport default connect( // 스토어와 연결\n  mapStateToProps,\n  mapDispatchToProps,\n)(ReviewList);"]},"metadata":{},"sourceType":"module"}