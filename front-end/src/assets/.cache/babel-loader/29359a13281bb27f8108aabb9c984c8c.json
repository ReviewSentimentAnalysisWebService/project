{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev_React\\\\project\\\\front-end\\\\src\\\\components\\\\Card\\\\ProductCard.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport SmartphoneIcon from \"@material-ui/icons/Smartphone\";\nimport { Link } from 'react-router-dom';\nimport productStore from 'store/modules/productStore';\nimport { connect } from 'react-redux';\nimport { changeProductList, changeCurrentProduct } from 'store/modules/productStore'; //import { handleClick } from 'container/ProductListContainer';\n//front-end\\src\\container\\ProductListContainer.js\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  margin: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst ProductCard = (props, click) => {\n  const classes = useStyles();\n  const bull = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bullet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }\n  }, \"\\u2022\");\n  const {\n    id,\n    avatarSrc,\n    title,\n    subtitle,\n    description,\n    imgSrc,\n    price\n  } = props;\n\n  const onClickHandler = () => {\n    changeCurrentProduct(\"test\");\n    changeProductList(ProductList_Category.productList_Lotions);\n    productStore.CurrentProduct = props.title; //제대로 넘어오는거니까 이 정보를 넘기면된다. \n    //Store에 저장하는 \n\n    console.log(\"storeTest\" + changeCurrentProduct);\n    console.log(\"asfasdf\" + JSON.stringify(productStore.state));\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatarSrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }),\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SmartphoneIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    })),\n    title: title,\n    subheader: subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardMedia, {\n    style: {\n      height: \"150px\"\n    },\n    image: imgSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, description)), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"medium\",\n    color: \"primary\",\n    className: classes.margin,\n    onClick: onClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Detail\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"www.naver.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"medium\",\n    color: \"primary\",\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"BUY NOW\"))));\n};\n\nconst mapStateToProps = ({\n  productStore\n}) => ({\n  //2\n  category: productStore.category,\n  list: productStore.productList,\n  CurrentProduct: productStore.CurrentProduct\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeProductList: list => dispatch(changeProductList(list)),\n  changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct))\n});\n\nexport default connect( // 스토어와 연결\nmapStateToProps, mapDispatchToProps)(ProductCard);","map":{"version":3,"sources":["C:/dev_React/project/front-end/src/components/Card/ProductCard.js"],"names":["React","makeStyles","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","IconButton","Typography","red","Button","SmartphoneIcon","Link","productStore","connect","changeProductList","changeCurrentProduct","useStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","margin","spacing","ProductCard","props","click","classes","bull","bullet","id","avatarSrc","title","subtitle","description","imgSrc","price","onClickHandler","ProductList_Category","productList_Lotions","CurrentProduct","console","log","JSON","stringify","state","mapStateToProps","category","list","productList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SmartphoneIcon from \"@material-ui/icons/Smartphone\";\r\nimport { Link } from 'react-router-dom';\r\nimport productStore from 'store/modules/productStore';\r\nimport { connect } from 'react-redux';\r\nimport { changeProductList, changeCurrentProduct } from 'store/modules/productStore';\r\n\r\n//import { handleClick } from 'container/ProductListContainer';\r\n//front-end\\src\\container\\ProductListContainer.js\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  margin: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ProductCard = (props, click) => {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  const { id, avatarSrc, title, subtitle, description, imgSrc, price } = props;\r\n  const onClickHandler = () => {\r\n\r\n    changeCurrentProduct(\"test\");\r\n    changeProductList(ProductList_Category.productList_Lotions);\r\n    productStore.CurrentProduct = props.title;\r\n    //제대로 넘어오는거니까 이 정보를 넘기면된다. \r\n    //Store에 저장하는 \r\n    console.log(\"storeTest\" + changeCurrentProduct);\r\n\r\n    console.log(\"asfasdf\" + JSON.stringify(productStore.state));\r\n  }\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={<Avatar src={avatarSrc} />}\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <SmartphoneIcon />\r\n          </IconButton>\r\n        }\r\n        title={title}\r\n        subheader={subtitle}\r\n      />\r\n      <CardMedia style={{ height: \"150px\" }} image={imgSrc} />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Link to=\"/detail\">\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            className={classes.margin}\r\n            onClick={onClickHandler}\r\n          >\r\n            Detail\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"www.naver.com\">\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            className={classes.margin}\r\n          >\r\n            BUY NOW\r\n        </Button>\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nconst mapStateToProps = ({ productStore }) => ({  //2\r\n  category: productStore.category,\r\n  list: productStore.productList,\r\n  CurrentProduct: productStore.CurrentProduct,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeProductList: list => dispatch(changeProductList(list)),\r\n  changeCurrentProduct: CurrentProduct => dispatch(changeCurrentProduct(CurrentProduct)),\r\n});\r\n\r\nexport default connect( // 스토어와 연결\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ProductCard);"]},"metadata":{},"sourceType":"module"}